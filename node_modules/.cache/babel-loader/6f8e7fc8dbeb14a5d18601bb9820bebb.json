{"remainingRequest":"/Users/const/Documents/Vue/vue-tet/node_modules/thread-loader/dist/cjs.js!/Users/const/Documents/Vue/vue-tet/node_modules/babel-loader/lib/index.js!/Users/const/Documents/Vue/vue-tet/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/const/Documents/Vue/vue-tet/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/const/Documents/Vue/vue-tet/src/components/Version.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/const/Documents/Vue/vue-tet/src/components/Version.vue","mtime":1556532130228},{"path":"/Users/const/Documents/Vue/vue-tet/node_modules/cache-loader/dist/cjs.js","mtime":1552975946601},{"path":"/Users/const/Documents/Vue/vue-tet/node_modules/thread-loader/dist/cjs.js","mtime":1552975955420},{"path":"/Users/const/Documents/Vue/vue-tet/node_modules/babel-loader/lib/index.js","mtime":1552975946378},{"path":"/Users/const/Documents/Vue/vue-tet/node_modules/cache-loader/dist/cjs.js","mtime":1552975946601},{"path":"/Users/const/Documents/Vue/vue-tet/node_modules/vue-loader/lib/index.js","mtime":1552975955943}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Vue from 'vue';\nimport axios from 'axios';\nimport Qs from 'qs';\nimport { onTips } from '@/assets/js/common.js';\nexport default {\n  name: 'Version',\n  data: function data() {\n    return {\n      aaa: true,\n      complete: false,\n      //是否加载完成\n      resData: Array,\n      saveData: [],\n      VersionData: {\n        pro: Number,\n        project: [],\n        rel: Number,\n        release: [{\n          value: 1,\n          label: '开发环境'\n        }, {\n          value: 0,\n          label: '生产环境'\n        }],\n        url: '',\n        branch: '',\n        type: Number\n      },\n      disabled: true,\n      ip: '',\n      VersionRules: {\n        pro: [{\n          required: true,\n          message: '',\n          trigger: 'blur'\n        }],\n        rel: [{\n          required: true,\n          message: '',\n          trigger: 'blur'\n        }],\n        url: [{\n          required: true,\n          message: '请输入 git | svn 地址',\n          trigger: 'blur'\n        }, {\n          min: 0,\n          max: 100,\n          message: '请输入合法的 git | svn 地址',\n          trigger: 'blur'\n        }],\n        branch: [{\n          required: true,\n          message: '请输入默认 (开发 | 生产环境) 分支',\n          trigger: 'blur'\n        }, {\n          min: 0,\n          max: 24,\n          message: '请输入合法的分支名称',\n          trigger: 'blur'\n        }],\n        type: [{\n          required: true,\n          message: '',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created: function created() {\n    var that = this;\n    axios.post('/api/website', {}, {}).then(function (res) {\n      if (res.data.status) {\n        var resData = res.data.data;\n        that.resData = resData;\n        var pro = Number;\n        var project = [];\n\n        for (var i = 0; i < resData.length; i++) {\n          if (resData[i].active) {\n            pro = resData[i].id;\n            that.VersionData.rel = resData[i].release;\n            that.VersionData.url = resData[i].url;\n            that.VersionData.branch = resData[i].branch;\n            that.VersionData.type = resData[i].type.toString();\n            that.ip = resData[i].ip;\n          }\n\n          var data = {\n            value: resData[i].id,\n            label: resData[i].domain,\n            status: resData[i].status,\n            type: resData[i].type == 2 ? 'svn' : 'git'\n          };\n          project.unshift(data);\n        }\n\n        that.VersionData.project = project;\n        that.VersionData.pro = pro;\n        that.saveData = [that.VersionData.pro, that.VersionData.rel, that.VersionData.url, that.VersionData.branch];\n        that.complete = true;\n      } else {\n        onTips(that, 'error', res.data.info);\n      }\n    }).catch(function (err) {\n      onTips(that, 'error', '网络错误~');\n    });\n  },\n  watch: {\n    VersionData: {\n      handler: function handler() {\n        var that = this;\n\n        for (var i = 0; i < that.resData.length; i++) {\n          if (that.resData[i].id == that.VersionData.pro) {\n            if (that.resData[i].status) {\n              var arr = [that.VersionData.pro, that.VersionData.rel, that.VersionData.url, that.VersionData.branch];\n\n              if (arr.toString() == that.saveData.toString()) {\n                that.disabled = true;\n              } else {\n                that.disabled = false;\n              }\n            } else {\n              that.disabled = false;\n            }\n          }\n        }\n      },\n      deep: true\n    }\n  },\n  methods: {\n    onSelect: function onSelect() {\n      var that = this;\n\n      for (var i = 0; i < that.resData.length; i++) {\n        if (that.resData[i].id == that.VersionData.pro) {\n          that.VersionData.rel = that.resData[i].release;\n          that.VersionData.url = that.resData[i].url;\n          that.VersionData.branch = that.resData[i].branch;\n          that.VersionData.type = that.resData[i].type.toString();\n          that.saveData = [that.resData[i].id, that.resData[i].release, that.resData[i].url, that.resData[i].branch];\n        }\n      }\n    },\n    onSubmit: function onSubmit(VersionData) {\n      var that = this;\n      that.$refs.VersionData.validate(function (valid) {\n        if (valid) {\n          //判断url是否与type匹配\n          var pass = false;\n\n          if (that.VersionData.type == '0') {\n            pass = that.VersionData.url.indexOf('git@') != -1;\n          } else if (that.VersionData.type == '1') {\n            pass = that.VersionData.url.indexOf('https://github.com') != -1;\n          } else if (that.VersionData.type == '2') {\n            pass = that.VersionData.url.indexOf('--username') != -1;\n          }\n\n          if (pass) {\n            that.onAxios();\n          } else {\n            onTips(that, 'error', 'git | svn地址与版本控制系统不匹配~');\n          }\n        } else {\n          return false;\n        }\n      });\n    },\n    onAxios: function onAxios() {\n      var that = this;\n      var data = {\n        'id': that.VersionData.pro,\n        'project': that.VersionData.pro,\n        'release': that.VersionData.rel,\n        'uri': that.VersionData.url,\n        'branch': that.VersionData.branch,\n        'type': that.VersionData.type\n      };\n      axios.post('/api/mate', Qs.stringify(data), {}).then(function (res) {\n        if (res.data.status) {\n          onTips(that, 'success', res.data.info);\n        } else {\n          onTips(that, 'error', res.data.info);\n        }\n      }).catch(function () {\n        onTips(that, 'error', '网络错误~');\n      });\n    }\n  }\n};",null]}