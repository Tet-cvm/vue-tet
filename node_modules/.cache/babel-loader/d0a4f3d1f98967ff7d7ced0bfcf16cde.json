{"remainingRequest":"/Users/const/Documents/Vue/vue-tet/node_modules/babel-loader/lib/index.js!/Users/const/Documents/Vue/vue-tet/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/const/Documents/Vue/vue-tet/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/const/Documents/Vue/vue-tet/src/components/Terminal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/const/Documents/Vue/vue-tet/src/components/Terminal.vue","mtime":1557738555628},{"path":"/Users/const/Documents/Vue/vue-tet/node_modules/cache-loader/dist/cjs.js","mtime":1552975946601},{"path":"/Users/const/Documents/Vue/vue-tet/node_modules/babel-loader/lib/index.js","mtime":1552975946378},{"path":"/Users/const/Documents/Vue/vue-tet/node_modules/cache-loader/dist/cjs.js","mtime":1552975946601},{"path":"/Users/const/Documents/Vue/vue-tet/node_modules/vue-loader/lib/index.js","mtime":1552975955943}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\nvar namespace = '/test';\nvar socket = io.connect(location.protocol + '//' + location.hostname + ':' + '5000' + namespace);\nexport default {\n  name: 'Terminal',\n  data: function data() {\n    return {\n      txt: '999'\n    };\n  },\n  created: function created() {\n    var that = this;\n    socket.on('connect', function () {\n      socket.emit('my_event', {\n        data: 'connect...'\n      });\n    });\n    socket.on('my_response', function (msg) {\n      that.txt = that.txt + msg.data;\n    });\n  },\n  mounted: function mounted() {// let that = this;\n    // let namespace = '/test'\n    // let socket = io.connect(location.protocol + '//' + location.hostname + ':' + '5000' + namespace)\n    // socket.on('connect', function() {\n    //     socket.emit('my_event', {data: 'connect...'})\n    // })\n    // socket.on('my_response', function(msg) {\n    //     that.txt = that.txt + msg.data;\n    //     console.log(msg, 'msg');\n    // })\n  },\n  methods: {\n    onJoin: function onJoin() {\n      socket.emit('join', {\n        room: 'AAA'\n      });\n      console.log('onJoin');\n    },\n    onSend: function onSend() {\n      socket.emit('my_room_event', {\n        room: 'AAA',\n        data: '发送消息00000'\n      });\n      console.log('onSend');\n    }\n  }\n};",{"version":3,"sources":["Terminal.vue"],"names":[],"mappings":";;;;;;;;;;;AASA,IAAA,SAAA,GAAA,OAAA;AACA,IAAA,MAAA,GAAA,EAAA,CAAA,OAAA,CAAA,QAAA,CAAA,QAAA,GAAA,IAAA,GAAA,QAAA,CAAA,QAAA,GAAA,GAAA,GAAA,MAAA,GAAA,SAAA,CAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,GAAA,EAAA;AADA,KAAA;AAGA,GANA;AAOA,EAAA,OAPA,qBAOA;AACA,QAAA,IAAA,GAAA,IAAA;AACA,IAAA,MAAA,CAAA,EAAA,CAAA,SAAA,EAAA,YAAA;AACA,MAAA,MAAA,CAAA,IAAA,CAAA,UAAA,EAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAAA;AACA,KAFA;AAGA,IAAA,MAAA,CAAA,EAAA,CAAA,aAAA,EAAA,UAAA,GAAA,EAAA;AACA,MAAA,IAAA,CAAA,GAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,CAAA,IAAA;AACA,KAFA;AAGA,GAfA;AAgBA,EAAA,OAhBA,qBAgBA,CACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA,GA9BA;AA+BA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,EAAA,kBAAA;AACA,MAAA,MAAA,CAAA,IAAA,CAAA,MAAA,EAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,QAAA;AACA,KAJA;AAKA,IAAA,MAAA,EAAA,kBAAA;AACA,MAAA,MAAA,CAAA,IAAA,CAAA,eAAA,EAAA;AAAA,QAAA,IAAA,EAAA,KAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,QAAA;AACA;AARA;AA/BA,CAAA","sourcesContent":["<template>\n    <div class=\"terminal\">\n        <div @click=\"onJoin()\">加入房间</div>\n        <div @click=\"onSend()\">发送消息</div>\n        <div>{{ txt }}</div>\n    </div>\n</template>\n\n<script>\nlet namespace = '/test'\nlet socket = io.connect(location.protocol + '//' + location.hostname + ':' + '5000' + namespace)\nexport default {\n    name: 'Terminal',\n    data() {\n        return {\n            txt: '999'\n        }\n    },\n    created() {\n        let that = this;\n        socket.on('connect', function() {\n            socket.emit('my_event', {data: 'connect...'})\n        })\n        socket.on('my_response', function(msg) {\n            that.txt = that.txt + msg.data;\n        })\n    },\n    mounted() {\n        // let that = this;\n        // let namespace = '/test'\n        // let socket = io.connect(location.protocol + '//' + location.hostname + ':' + '5000' + namespace)\n\n        // socket.on('connect', function() {\n        //     socket.emit('my_event', {data: 'connect...'})\n        // })\n\n        // socket.on('my_response', function(msg) {\n        //     that.txt = that.txt + msg.data;\n        //     console.log(msg, 'msg');\n        // })\n\n    },\n    methods: {\n        onJoin: function() {\n            socket.emit('join', {room: 'AAA'});\n            console.log('onJoin');\n        },\n        onSend: function() {\n            socket.emit('my_room_event', {room: 'AAA', data: '发送消息00000'});\n            console.log('onSend');\n        }\n\n    }\n}\n</script>\n\n<style>\n.terminal {\n    background-color: red;\n}\n</style>\n\n\n"],"sourceRoot":"src/components"}]}