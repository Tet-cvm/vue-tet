{"remainingRequest":"/Users/const/Documents/Vue/vue-tet/node_modules/thread-loader/dist/cjs.js!/Users/const/Documents/Vue/vue-tet/node_modules/babel-loader/lib/index.js!/Users/const/Documents/Vue/vue-tet/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/const/Documents/Vue/vue-tet/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/const/Documents/Vue/vue-tet/src/components/Online.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/const/Documents/Vue/vue-tet/src/components/Online.vue","mtime":1557815364925},{"path":"/Users/const/Documents/Vue/vue-tet/node_modules/cache-loader/dist/cjs.js","mtime":1552975946601},{"path":"/Users/const/Documents/Vue/vue-tet/node_modules/thread-loader/dist/cjs.js","mtime":1552975955420},{"path":"/Users/const/Documents/Vue/vue-tet/node_modules/babel-loader/lib/index.js","mtime":1552975946378},{"path":"/Users/const/Documents/Vue/vue-tet/node_modules/cache-loader/dist/cjs.js","mtime":1552975946601},{"path":"/Users/const/Documents/Vue/vue-tet/node_modules/vue-loader/lib/index.js","mtime":1552975955943}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar namespace = '/tet';\nvar socket = io.connect(location.protocol + '//' + location.hostname + ':' + '5000' + namespace);\nimport { codemirror } from 'vue-codemirror';\n\nrequire(\"codemirror/mode/python/python.js\");\n\nrequire('codemirror/addon/fold/foldcode.js');\n\nrequire('codemirror/addon/fold/foldgutter.js');\n\nrequire('codemirror/addon/fold/brace-fold.js');\n\nrequire('codemirror/addon/fold/xml-fold.js');\n\nrequire('codemirror/addon/fold/indent-fold.js');\n\nrequire('codemirror/addon/fold/markdown-fold.js');\n\nrequire('codemirror/addon/fold/comment-fold.js');\n\nimport 'codemirror/theme/dracula.css';\nexport default {\n  name: 'Online',\n  components: {\n    codemirror: codemirror\n  },\n  data: function data() {\n    return {\n      txt: 'aaaa',\n      codeMsg: '',\n      myCm: '',\n      cmOptions: {\n        value: '',\n        mode: 'text/html',\n        theme: 'dracula',\n        indentUnit: 2,\n        smartIndent: true,\n        tabSize: 4,\n        readOnly: false,\n        showCursorWhenSelecting: true,\n        lineNumbers: true\n      }\n    };\n  },\n  created: function created() {\n    var that = this; //连接websocket\n\n    socket.on('connect', function () {\n      socket.emit('my_event', {\n        data: 'connect...'\n      });\n    });\n    socket.on('my_response', function (msg) {\n      console.log(msg, 'msg');\n      that.txt = that.txt + msg.data;\n\n      switch (msg.room) {\n        case 'terminal':\n          that.codeMsg += msg.data;\n          break;\n\n        case 'branchs':\n          console.log('branchs');\n          break;\n      }\n    }); //创建终端room\n\n    socket.emit('join', {\n      data: null,\n      room: 'terminal',\n      type: null\n    }); //创建\n\n    socket.emit('join', {\n      data: null,\n      room: 'branchs',\n      type: null\n    }); // socket.emit('my_room_event', {room: 'terminal', data: '发送消息00000'});\n  },\n  methods: {\n    onSubmit: function onSubmit() {\n      socket.emit('my_room_event', {\n        room: 'terminal',\n        data: null,\n        type: 'release'\n      });\n    },\n    onChange: function onChange() {\n      console.log('2345');\n    }\n  }\n};",null]}