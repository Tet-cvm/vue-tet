{"remainingRequest":"/Users/const/Documents/Movie/Slog/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/const/Documents/Movie/Slog/src/components/Member.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/const/Documents/Movie/Slog/src/components/Member.vue","mtime":1570499818493},{"path":"/Users/const/Documents/Movie/Slog/node_modules/cache-loader/dist/cjs.js","mtime":1552975946601},{"path":"/Users/const/Documents/Movie/Slog/node_modules/babel-loader/lib/index.js","mtime":1552975946378},{"path":"/Users/const/Documents/Movie/Slog/node_modules/ts-loader/index.js","mtime":1552975955462},{"path":"/Users/const/Documents/Movie/Slog/node_modules/cache-loader/dist/cjs.js","mtime":1552975946601},{"path":"/Users/const/Documents/Movie/Slog/node_modules/vue-loader/lib/index.js","mtime":1552975955943}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport default {\n    name: 'Member',\n    data() {\n        return {\n            manageData: [],\n            dialogDel: false,\n            dialogEdit: false,\n            form: {\n                name: '',\n                region: '',\n                date1: '',\n                date2: '',\n                delivery: false,\n                type: [],\n                resource: '',\n                desc: ''\n            }\n        }\n    },\n    created() {\n        let that = this;\n        that.$axios.post('/api/manage', {}, {})\n        .then(function(res){\n            console.log(res, 'res');\n            that.manageData = res.data;\n        })\n        .catch(function(err) {\n            that.$toast(that, 'error', '网络错误～');\n        })\n    },\n    mounted() {\n        let that = this;\n    },\n    methods: {\n        onFilter: function(role) {\n            switch(role)\n            {\n                case 0:\n                    return '超级管理员';\n                case 1:\n                    return '管理员';\n                case 2:\n                    return '用户';\n            }\n        },\n        handleEdit(index, row) {\n            console.log(index, row);\n            this.dialogEdit = true;\n        },\n        handleDelete(index, row) {\n            console.log(index, row);\n            this.dialogDel = true;\n        },\n        handleClose(done) {\n\n        },\n        onSubmit() {\n            console.log('submit!');\n        }\n\n    }\n}\n",{"version":3,"sources":["Member.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA","file":"Member.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"member\">\n        <el-table :data=\"manageData\" style=\"width: 100%\" height=\"100%\">\n            <el-table-column label=\"序号\" prop=\"id\" width=\"60px\"></el-table-column>\n            <el-table-column label=\"角色\" prop=\"role\">\n                <template slot-scope=\"scope\">\n                    <span>{{ onFilter(scope.row.role) }}</span>\n                </template>\n            </el-table-column>\n            <el-table-column label=\"用户名\" prop=\"user_name\"></el-table-column>\n            <el-table-column label=\"头像\">\n                <template slot-scope=\"scope\">\n                    <img :src=\"scope.row.user_icon\" alt=\"\" />\n                </template>\n            </el-table-column>\n            <el-table-column label=\"操作\">\n                <template slot-scope=\"scope\">\n                    <el-button\n                    size=\"mini\"\n                    @click=\"handleEdit(scope.$index, scope.row)\">编辑</el-button>\n                    <el-button\n                    size=\"mini\"\n                    type=\"danger\"\n                    @click=\"handleDelete(scope.$index, scope.row)\">删除</el-button>\n                </template>\n            </el-table-column>\n        </el-table>\n        <!--【删除对话框】-->\n        <el-dialog title=\"警告\" :visible.sync=\"dialogDel\" top=\"30vh\" :show-close=\"false\" width=\"320px\" custom-class=\"dialogDel\" :before-close=\"handleClose\">\n            <span>你确定要删除该用户吗 ?</span>\n            <span slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"dialogDel = false\">取 消</el-button>\n                <el-button @click=\"dialogDel = false\">确 定</el-button>\n            </span>\n        </el-dialog>\n        <!--【编辑对话框】-->\n        <el-dialog title=\"编辑\" :visible.sync=\"dialogEdit\" top=\"10vh\" :show-close=\"false\" width=\"680px\" custom-class=\"dialogEdit\" :before-close=\"handleClose\">\n            <el-form ref=\"form\" :model=\"form\" label-width=\"80px\">\n                <el-form-item label=\"活动名称\">\n                    <el-input v-model=\"form.name\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"活动区域\">\n                    <el-select v-model=\"form.region\" placeholder=\"请选择活动区域\">\n                        <el-option label=\"区域一\" value=\"shanghai\"></el-option>\n                        <el-option label=\"区域二\" value=\"beijing\"></el-option>\n                    </el-select>\n                </el-form-item>\n                <el-form-item label=\"活动时间\">\n                    <el-col :span=\"11\">\n                        <el-date-picker type=\"date\" placeholder=\"选择日期\" v-model=\"form.date1\" style=\"width: 100%;\"></el-date-picker>\n                    </el-col>\n                    <el-col class=\"line\" :span=\"2\">-</el-col>\n                    <el-col :span=\"11\">\n                        <el-time-picker placeholder=\"选择时间\" v-model=\"form.date2\" style=\"width: 100%;\"></el-time-picker>\n                    </el-col>\n                </el-form-item>\n                <el-form-item label=\"即时配送\">\n                    <el-switch v-model=\"form.delivery\"></el-switch>\n                </el-form-item>\n                <el-form-item label=\"活动性质\">\n                    <el-checkbox-group v-model=\"form.type\">\n                        <el-checkbox label=\"美食/餐厅线上活动\" name=\"type\"></el-checkbox>\n                        <el-checkbox label=\"地推活动\" name=\"type\"></el-checkbox>\n                        <el-checkbox label=\"线下主题活动\" name=\"type\"></el-checkbox>\n                        <el-checkbox label=\"单纯品牌曝光\" name=\"type\"></el-checkbox>\n                    </el-checkbox-group>\n                </el-form-item>\n                <el-form-item label=\"特殊资源\">\n                    <el-radio-group v-model=\"form.resource\">\n                        <el-radio label=\"线上品牌商赞助\"></el-radio>\n                        <el-radio label=\"线下场地免费\"></el-radio>\n                    </el-radio-group>\n                </el-form-item>\n                <el-form-item label=\"活动形式\">\n                    <el-input type=\"textarea\" v-model=\"form.desc\"></el-input>\n                </el-form-item>\n                <el-form-item>\n                    <el-button type=\"primary\" @click=\"onSubmit\">立即创建</el-button>\n                <el-button>取消</el-button>\n                </el-form-item>\n            </el-form>\n        </el-dialog>\n\n    </div>\n</template>\n\n<script lang=\"ts\">\nexport default {\n    name: 'Member',\n    data() {\n        return {\n            manageData: [],\n            dialogDel: false,\n            dialogEdit: false,\n            form: {\n                name: '',\n                region: '',\n                date1: '',\n                date2: '',\n                delivery: false,\n                type: [],\n                resource: '',\n                desc: ''\n            }\n        }\n    },\n    created() {\n        let that = this;\n        that.$axios.post('/api/manage', {}, {})\n        .then(function(res){\n            console.log(res, 'res');\n            that.manageData = res.data;\n        })\n        .catch(function(err) {\n            that.$toast(that, 'error', '网络错误～');\n        })\n    },\n    mounted() {\n        let that = this;\n    },\n    methods: {\n        onFilter: function(role) {\n            switch(role)\n            {\n                case 0:\n                    return '超级管理员';\n                case 1:\n                    return '管理员';\n                case 2:\n                    return '用户';\n            }\n        },\n        handleEdit(index, row) {\n            console.log(index, row);\n            this.dialogEdit = true;\n        },\n        handleDelete(index, row) {\n            console.log(index, row);\n            this.dialogDel = true;\n        },\n        handleClose(done) {\n\n        },\n        onSubmit() {\n            console.log('submit!');\n        }\n\n    }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"less\">\n.member {\n    width: 100%;\n    height: 100%;\n    background-color: #ffffff;\n}\n.member img {\n    width: 38px;\n    height: 38px;\n}\n</style>"]}]}