{"remainingRequest":"/Users/const/Documents/Vue/vue-tet/node_modules/thread-loader/dist/cjs.js!/Users/const/Documents/Vue/vue-tet/node_modules/babel-loader/lib/index.js!/Users/const/Documents/Vue/vue-tet/node_modules/ts-loader/index.js??ref--13-3!/Users/const/Documents/Vue/vue-tet/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/const/Documents/Vue/vue-tet/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/const/Documents/Vue/vue-tet/src/components/Site.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/const/Documents/Vue/vue-tet/src/components/Site.vue","mtime":1555641748505},{"path":"/Users/const/Documents/Vue/vue-tet/node_modules/cache-loader/dist/cjs.js","mtime":1552975946601},{"path":"/Users/const/Documents/Vue/vue-tet/node_modules/thread-loader/dist/cjs.js","mtime":1552975955420},{"path":"/Users/const/Documents/Vue/vue-tet/node_modules/babel-loader/lib/index.js","mtime":1552975946378},{"path":"/Users/const/Documents/Vue/vue-tet/node_modules/ts-loader/index.js","mtime":1552975955462},{"path":"/Users/const/Documents/Vue/vue-tet/node_modules/cache-loader/dist/cjs.js","mtime":1552975946601},{"path":"/Users/const/Documents/Vue/vue-tet/node_modules/vue-loader/lib/index.js","mtime":1552975955943}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport axios from 'axios';\nimport Qs from 'qs';\nimport { codemirror } from 'vue-codemirror';\n\nrequire(\"codemirror/mode/python/python.js\");\n\nrequire('codemirror/addon/fold/foldcode.js');\n\nrequire('codemirror/addon/fold/foldgutter.js');\n\nrequire('codemirror/addon/fold/brace-fold.js');\n\nrequire('codemirror/addon/fold/xml-fold.js');\n\nrequire('codemirror/addon/fold/indent-fold.js');\n\nrequire('codemirror/addon/fold/markdown-fold.js');\n\nrequire('codemirror/addon/fold/comment-fold.js');\n\nimport { onTips } from '@/assets/js/common.js';\nimport Crumb from '@/components/Crumb.vue';\nexport default {\n  name: 'Setting',\n  components: {\n    Crumb: Crumb,\n    codemirror: codemirror\n  },\n  data: function data() {\n    return {\n      siteData: [],\n      newDialog: false,\n      delDialog: false,\n      nginxStatus: false,\n      nowID: Number,\n      nowIndex: Number,\n      ruleNew: {\n        domain: '',\n        criterion: true,\n        start: true,\n        directory: ''\n      },\n      rules: {\n        domain: [{\n          required: true,\n          message: '请输入域名~',\n          trigger: 'blur'\n        }, {\n          min: 2,\n          max: 100,\n          message: '域名输入错误~',\n          trigger: 'blur'\n        }],\n        directory: [{\n          required: true,\n          message: '请输入站点根目录名称~',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 30,\n          message: '站点根目录名称错误~',\n          trigger: 'blur'\n        }]\n      },\n      codemirrorDialog: false,\n      codeMsg: '',\n      myCm: '',\n      cmOptions: {\n        value: '',\n        mode: 'text/html',\n        theme: 'foo bar',\n        indentUnit: 2,\n        smartIndent: true,\n        tabSize: 4,\n        readOnly: false,\n        showCursorWhenSelecting: true,\n        lineNumbers: true\n      }\n    };\n  },\n  created: function created() {\n    var that = this;\n    axios.post('/api/project', {}, {}).then(function (res) {\n      if (res.data.status) {\n        that.siteData = res.data.data;\n      }\n    }).catch(function (err) {\n      onTips(that, 'error', '网络错误～');\n    });\n  },\n  methods: {\n    onNginx: function onNginx() {\n      var that = this;\n      that.nginxStatus = true;\n      axios.post('/api/nginx', {}, {}).then(function (res) {\n        if (res.data.status) {\n          that.codeMsg = res.data.data;\n          that.codemirrorDialog = true;\n        }\n      }).catch(function () {\n        onTips(that, 'error', '网络错误～');\n      });\n    },\n    onSiteNginx: function onSiteNginx() {\n      var that = this;\n      var data = {\n        file: that.codeMsg\n      };\n      axios.post('/api/config', Qs.stringify(data), {}).then(function (res) {\n        if (res.data.status) {\n          that.nginxStatus = false;\n          that.codemirrorDialog = false;\n          onTips(that, 'success', res.data.info);\n        } else {\n          onTips(that, 'error', res.data.info);\n        }\n      }).catch(function () {\n        onTips(that, 'error', '网络错误～');\n      });\n    },\n    onNewSite: function onNewSite() {\n      this.newDialog = true;\n    },\n    handleSet: function handleSet(id) {\n      var that = this;\n      that.nowID = id;\n      var data = {\n        id: id\n      };\n      axios.post('/api/rest', Qs.stringify(data), {}).then(function (res) {\n        if (res.data.status) {\n          that.codeMsg = res.data.data;\n          that.codemirrorDialog = true;\n        }\n      }).catch(function (err) {\n        onTips(that, 'error', '网络错误～');\n      });\n    },\n    handleStart: function handleStart(id, index) {\n      var that = this;\n      var data = {\n        id: id,\n        status: !that.siteData[index].status ? 1 : 0\n      };\n      axios.post('/api/start', Qs.stringify(data), {}).then(function (res) {\n        if (res.data.status) {\n          that.siteData[index].status = !that.siteData[index].status;\n          onTips(that, 'success', res.data.info);\n        } else {\n          onTips(that, 'error', res.data.info);\n        }\n      }).catch(function (err) {\n        onTips(that, 'error', '网络错误～');\n      });\n    },\n    handleDel: function handleDel(id, index) {\n      this.delDialog = true;\n      this.nowID = id;\n      this.nowIndex = index;\n    },\n    submitNew: function submitNew(ruleNew) {\n      var that = this;\n      that.$refs[ruleNew].validate(function (valid) {\n        if (valid) {\n          var data = {\n            domain: that.ruleNew.domain,\n            criterion: that.ruleNew.criterion ? 1 : 0,\n            status: that.ruleNew.start ? 1 : 0,\n            directory: that.ruleNew.directory\n          };\n          axios.post('/api/new', Qs.stringify(data), {}).then(function (res) {\n            if (res.data.status) {\n              that.newDialog = false;\n              that.siteData.push(res.data.data[0]);\n              onTips(that, 'success', res.data.info);\n            } else {\n              onTips(that, 'error', res.data.info);\n            }\n          }).catch(function (err) {\n            onTips(that, 'error', '网络错误～');\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    onDelete: function onDelete() {\n      var that = this;\n      var data = {\n        id: that.nowID\n      };\n      axios.post('/api/clear', Qs.stringify(data), {}).then(function (res) {\n        if (res.data.status) {\n          that.delDialog = false;\n          that.siteData.splice(that.nowIndex, 1);\n          onTips(that, 'success', res.data.info);\n        }\n      }).catch(function () {\n        onTips(that, 'error', '网络错误～');\n      });\n    },\n    onSiteFile: function onSiteFile() {\n      var that = this;\n      var data = {\n        id: that.nowID,\n        file: that.codeMsg\n      };\n      axios.post('/api/adapt', Qs.stringify(data), {}).then(function (res) {\n        if (res.data.status) {\n          that.codemirrorDialog = false;\n          onTips(that, 'success', res.data.info);\n        } else {\n          onTips(that, 'error', res.data.info);\n        }\n      }).catch(function () {\n        onTips(that, 'error', '网络错误～');\n      });\n    },\n    onChange: function onChange() {\n      console.log('2345');\n    }\n  }\n};",null]}