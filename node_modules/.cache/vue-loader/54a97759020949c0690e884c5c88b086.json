{"remainingRequest":"/Users/const/Documents/Vue/vue-tet/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/const/Documents/Vue/vue-tet/src/components/Version.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/const/Documents/Vue/vue-tet/src/components/Version.vue","mtime":1556532130228},{"path":"/Users/const/Documents/Vue/vue-tet/node_modules/babel-loader/lib/index.js","mtime":1552975946378},{"path":"/Users/const/Documents/Vue/vue-tet/node_modules/cache-loader/dist/cjs.js","mtime":1552975946601},{"path":"/Users/const/Documents/Vue/vue-tet/node_modules/vue-loader/lib/index.js","mtime":1552975955943}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Vue from 'vue'\nimport axios from 'axios';\nimport Qs from 'qs';\nimport { onTips } from '@/assets/js/common.js';\nexport default {\n    name: 'Version',\n    data() {\n        return {\n            aaa: true,\n            complete: false, //是否加载完成\n            resData: Array,\n            saveData: [],\n            VersionData: {\n                pro: Number,\n                project: [],\n                rel: Number,\n                release: [\n                    { value: 1, label: '开发环境' },\n                    { value: 0, label: '生产环境' },\n                ],\n                url: '',\n                branch: '',\n                type: Number,\n            },\n            disabled: true,\n            ip: '',\n            VersionRules: {\n                pro: [\n                    { required: true, message: '', trigger: 'blur' },\n                    // { min: 2, max: 10, message: '', trigger: 'blur' }\n                ],\n                rel: [\n                    { required: true, message: '', trigger: 'blur' },\n                    // { min: 2, max: 10, message: '', trigger: 'blur' }\n                ],\n                url: [\n                    { required: true, message: '请输入 git | svn 地址', trigger: 'blur' },\n                    { min: 0, max: 100, message: '请输入合法的 git | svn 地址', trigger: 'blur' }\n                ],\n                branch: [\n                    { required: true, message: '请输入默认 (开发 | 生产环境) 分支', trigger: 'blur' },\n                    { min: 0, max: 24, message: '请输入合法的分支名称', trigger: 'blur' }\n                ],\n                type: [\n                    { required: true, message: '', trigger: 'blur' },\n                ]\n            }\n        }\n    },\n    created() {\n        let that = this;\n        axios.post('/api/website', {}, {})\n        .then(function(res) {\n            if (res.data.status) {\n                let resData = res.data.data;\n                that.resData = resData;\n                let pro = Number;\n                let project = [];\n\n                for (let i = 0; i < resData.length; i++) {\n                    if (resData[i].active) {\n                        pro = resData[i].id;\n                        that.VersionData.rel = resData[i].release;\n                        that.VersionData.url = resData[i].url;\n                        that.VersionData.branch = resData[i].branch;\n                        that.VersionData.type = resData[i].type.toString();\n                        that.ip = resData[i].ip;\n                    }\n                    let data = {value: resData[i].id, label: resData[i].domain, status: resData[i].status, type: resData[i].type==2 ? 'svn': 'git' }\n                    project.unshift(data);\n                }\n                that.VersionData.project = project;\n                that.VersionData.pro = pro;\n                that.saveData = [that.VersionData.pro, that.VersionData.rel, that.VersionData.url, that.VersionData.branch]\n                that.complete = true;\n            } else {\n                onTips(that, 'error', res.data.info);\n            }\n        })\n        .catch(function(err) {\n            onTips(that, 'error', '网络错误~');\n        })\n    },\n    watch: {\n        VersionData: {\n            handler: function() {\n                let that = this;\n                for (let i=0; i<that.resData.length; i++) {\n                    if (that.resData[i].id == that.VersionData.pro) {\n                        if (that.resData[i].status) {\n                            let arr = [that.VersionData.pro, that.VersionData.rel, that.VersionData.url, that.VersionData.branch];\n                            if (arr.toString() == that.saveData.toString()) {\n                                that.disabled = true;\n                            } else {\n                                that.disabled = false;\n                            }\n                        } else {\n                            that.disabled = false;\n                        }\n                    }\n                }\n            },\n            deep: true\n        }\n    },\n    methods: {\n        onSelect: function() {\n            let that = this;\n            for (let i=0; i<that.resData.length; i++) {\n                if (that.resData[i].id == that.VersionData.pro) {\n                    that.VersionData.rel = that.resData[i].release;\n                    that.VersionData.url = that.resData[i].url;\n                    that.VersionData.branch = that.resData[i].branch;\n                    that.VersionData.type = that.resData[i].type.toString();\n                    that.saveData = [that.resData[i].id, that.resData[i].release, that.resData[i].url, that.resData[i].branch];\n                }\n            }\n        },\n        onSubmit: function(VersionData) {\n            let that = this;\n            that.$refs.VersionData.validate((valid)=>{\n                if (valid) {\n                    //判断url是否与type匹配\n                    let pass = false;\n                    if (that.VersionData.type == '0') {\n                        pass = that.VersionData.url.indexOf('git@') != -1\n                    } else if (that.VersionData.type == '1') {\n                        pass = that.VersionData.url.indexOf('https://github.com') != -1\n                    } else if (that.VersionData.type == '2') {\n                        pass = that.VersionData.url.indexOf('--username') != -1\n                    }\n\n                    if (pass) {\n                        that.onAxios();\n                    } else {\n                        onTips(that, 'error', 'git | svn地址与版本控制系统不匹配~');\n                    }\n                } else {\n                    return false\n                }\n            })\n        },\n        onAxios: function() {\n            let that = this;\n            let data = {\n                'id': that.VersionData.pro,\n                'project': that.VersionData.pro,\n                'release': that.VersionData.rel,\n                'uri': that.VersionData.url,\n                'branch': that.VersionData.branch,\n                'type': that.VersionData.type\n            };\n\n            axios.post('/api/mate', Qs.stringify(data), {})\n            .then(function(res) {\n                if (res.data.status) {\n                    onTips(that, 'success', res.data.info);\n                } else {\n                    onTips(that, 'error', res.data.info);\n                }\n            })\n            .catch(function() {\n                onTips(that, 'error', '网络错误~');\n            })\n        }\n    }\n}\n",null]}