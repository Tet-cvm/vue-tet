{"remainingRequest":"/Users/const/Documents/Vue/vue-tet/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/const/Documents/Vue/vue-tet/src/components/Home.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/const/Documents/Vue/vue-tet/src/components/Home.vue","mtime":1557460125639},{"path":"/Users/const/Documents/Vue/vue-tet/node_modules/cache-loader/dist/cjs.js","mtime":1552975946601},{"path":"/Users/const/Documents/Vue/vue-tet/node_modules/babel-loader/lib/index.js","mtime":1552975946378},{"path":"/Users/const/Documents/Vue/vue-tet/node_modules/ts-loader/index.js","mtime":1552975955462},{"path":"/Users/const/Documents/Vue/vue-tet/node_modules/cache-loader/dist/cjs.js","mtime":1552975946601},{"path":"/Users/const/Documents/Vue/vue-tet/node_modules/vue-loader/lib/index.js","mtime":1552975955943}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport axios from 'axios';\nimport Qs from 'qs';\nimport {onTips} from '@/assets/js/common.js';\nimport * as echarts from 'echarts';\nimport Crumb from '@/components/Crumb.vue'\nexport default {\n    props: ['isNotice'],\n    name: 'Home',\n    components: {\n        Crumb\n    },\n    data() {\n        return {\n            installDialog: false,\n            lamp: ['Linux','Apache', 'MySQL', 'PHP'],\n            lnmp: ['Linux','Nginx', 'MySQL', 'PHP'],\n            domLoad: null,\n            domCpu: null,\n            domMemory: null,\n            domDisk: null,\n            nowLoadData: 18,\n            nowCpuData: 18,\n            nowMemoryData: 18,\n            nowDiskData: 18,\n            getLoadData: Number,\n            getCpuData: Number,\n            getMemoryData: Number,\n            getDiskData: Number,\n            dangerColor: '#09BB07',\n            cvmName: '',\n            circle: 5,\n            loading: false,\n            loadTxt: '重启服务器',\n            round: {'load': 0, 'cpu': 0, 'memory': 0, 'disk': 0},\n        }\n    },\n    created() {\n        let that = this;\n\n        axios.post('/api/origin', {}, {})\n        .then(function(res) {\n            if (res.data.status) {\n                if (!res.data.data) {\n                    that.installDialog = true;\n                }\n            } else {\n                onTips(that, 'error', res.data.info);\n            }\n        })\n        .catch(function(err) {\n            onTips(that, 'error', '网络错误~');\n        })\n\n        that.axiosRound();\n        let Timer = setInterval(function() {\n            that.axiosRound();\n        }, 3600);\n\n        axios.post('/api/message', {}, {})\n        .then(function(res) {\n            if (res.data.status) {\n                that.cvmName = res.data.data;\n            } else {\n                onTips(that, 'error', res.data.info);\n            }\n        })\n        .catch(function(err) {\n            onTips(that, 'error', '网络错误~');\n        })\n\n        axios.post('/api/chart', {}, {})\n        .then(function(res){\n            console.log(res);\n            if (res.data.status) {\n                var categroy = echarts.init(document.getElementById('categroy'));\n                that.onCategroy(categroy, res.data.data.ltime, res.data.data.ntime, res.data.data.ldata, res.data.data.ndata);\n            } else {\n                onTips(that, 'error', res.data.info);\n            }\n        })\n        .catch(function(err){\n            onTips(that, 'error', '网络错误~');\n        })\n    },\n    watch: {\n        getLoadData: function() {\n            this.onIncrease(this.domLoad, this.nowLoadData, this.getLoadData);\n        },\n        getCpuData: function() {\n            this.onIncrease(this.domCpu, this.nowCpuData, this.getCpuData);\n        },\n        getMemoryData: function() {\n            this.onIncrease(this.domMemory, this.nowMemoryData, this.getMemoryData);\n        },\n        getDiskData: function() {\n            this.onIncrease(this.domDisk, this.nowDiskData, this.getDiskData);\n        }\n    },\n    mounted: function() {\n        this.$nextTick(function() {\n            this.domLoad = echarts.init(document.getElementById('tetLoad'));\n            this.domCpu = echarts.init(document.getElementById('tetCpu'));\n            this.domMemory = echarts.init(document.getElementById('tetMemory'));\n            this.domDisk = echarts.init(document.getElementById('tetDisk'));\n            this.onInitialize(this.domLoad, '负载均衡', this.nowLoadData);\n            this.onInitialize(this.domCpu, 'CPU使用率', this.nowCpuData);\n            this.onInitialize(this.domMemory, '内存使用率', this.nowMemoryData);\n            this.onInitialize(this.domDisk, '硬盘使用率', this.nowDiskData);\n        })\n    },\n    methods: {\n        onInstallLamp: function() {\n            let that = this;\n            axios.post('/shell/lamp', {}, {})\n            .then(function(res){\n                if (res.data.status) {\n                    console.log(res);\n                } else {\n                    onTips(that, 'error', res.data.info);\n                }\n            })\n            .catch(function(err){\n                onTips(that, 'error', '网络错误~');\n            })\n        },\n        onInstallLnmp: function() {\n            let that = this;\n            axios.post('/shell/lnmp', {}, {})\n            .then(function(res){\n                if (res.data.status) {\n                    that.installDialog = false;\n                } else {\n                    onTips(that, 'error', res.data.info);\n                }\n            })\n            .catch(function(err){\n                onTips(that, 'error', '网络错误~');\n            })\n        },\n        axiosRound: function() {\n            let that = this;\n            axios.post('/api/round', {}, {})\n            .then(function(res){\n                console.log(res.data);\n                if (res.data.status) {\n                    let Data = res.data.data;\n                    that.getLoadData = Data.load;\n                    that.getCpuData = Data.cpu;\n                    that.getMemoryData = Data.memory;\n                    that.getDiskData = Data.disk;\n                } else {\n                    onTips(that, 'error', res.data.info);\n                }\n            })\n            .catch(function(err){\n                onTips(that, 'error', '网络错误~');\n            })\n        },\n        //初始化数据\n        onInitialize: function(myChart, Title, Data) {\n            var option = {\n                title: {\n                    text: Title,\n                    left: 'center',\n                    bottom: 4,\n                    textStyle: {\n                        fontSize: 16,\n                        fontWeight: 'normal',\n                        color: '#666666'\n                    }\n                },\n                tooltip: {\n                    show: true,\n                    confine: true,\n                    trigger: 'item',\n                    formatter: \"{a} <br/> 比例：( {d}% )\"\n                },\n                color: ['#b2b2b2', this.dangerColor],\n                calculable : false,\n                series: [{\n                    name: Title,\n                    type:'pie',\n                    radius: ['47%', '60%'],\n                    hoverAnimation: false,\n                    legendHoverLink: false,\n                    avoidLabelOverlap: false,\n                    label: {\n                        normal: {\n                            show: false,\n                            position: 'center'\n                        },\n                        emphasis: {\n                            show: false\n                        }\n                    },\n                    labelLine: {\n                        normal: {\n                            show: false\n                        }\n                    },\n                    data:[\n                        {value: (100-Data).toFixed(1), name: (100-Data).toFixed(1) + '%'},\n                        {value: Data.toFixed(1), name: Data.toFixed(1) + '%', label: {show: true , fontSize: '19',  fontWeight: 'bold'}},\n                    ]\n                }]\n            };\n            myChart.setOption(option);\n        },\n        //数据动态增减\n        onIncrease: function(myChart, nowData, getData) {\n            let that = this;\n            if (nowData != getData) {\n                let timer = setInterval(function() {\n                    if (nowData < getData) {\n                        nowData++;\n                        that.onApply(myChart, nowData);\n                        if (nowData >= getData) {\n                            that.nowLoadData = that.getLoadData;\n                            that.nowCpuData = that.getCpuData;\n                            that.nowMemoryData = that.getMemoryData;\n                            that.nowDiskData = that.getDiskData;\n                            clearInterval(timer);\n                        }\n                    }\n\n                    if (nowData > getData) {\n                        nowData--;\n                        that.onApply(myChart, nowData);\n                        if (nowData <= getData) {\n                            that.nowLoadData = that.getLoadData;\n                            that.nowCpuData = that.getCpuData;\n                            that.nowMemoryData = that.getMemoryData;\n                            that.nowDiskData = that.getDiskData;\n                            clearInterval(timer);\n                        }\n                    }\n                }, 45);\n            }\n        },\n        onApply: function(myChart, Data) {\n            let that = this;\n            Data > 68 ? (Data > 86 ? (this.dangerColor = '#b44038'):(this.dangerColor = '#c9856b')):(this.dangerColor = '#09BB07');\n            myChart.setOption({\n                animation: false,\n                color: ['#b2b2b2', this.dangerColor],\n                series: [{\n                    data:[\n                        {value: (100-Data).toFixed(1), name: (100-Data).toFixed(1)+ '%'},\n                        {value: Data.toFixed(1), name: Data.toFixed(1) + '%', label: {show: true , fontSize: '19',  fontWeight: 'bold'}},\n                    ]\n                }]\n            })\n        },\n        reLoad: function() {\n            let that = this;\n            if (!that.loading) {\n                that.loading = true;\n                that.loadTxt = '重启中...';\n                axios.post('/api/restart', {}, {})\n                .then(function(res) {\n                    if (res.data.status) {\n                        that.loading = false;\n                        that.loadTxt = '重启服务器';\n                    }\n                    console.log(res);\n                })\n                .catch(function(err) {\n                    console.log(err);\n                })\n            }\n        },\n        onCategroy: function(myChart, lastTime, nowTime, lastData, nowData) {\n            var option = {\n                color: ['#e64340', '#09BB07'],\n                tooltip: {\n                    trigger: 'none',\n                    axisPointer: {\n                        type: 'cross'\n                    }\n                },\n                legend: {\n                    data:['昨日流量', '今日流量']\n                },\n                grid: {\n                    top: 70,\n                    bottom: 42\n                },\n                xAxis: [\n                    {\n                        type: 'category',\n                        axisTick: {\n                            alignWithLabel: true\n                        },\n                        axisLine: {\n                            onZero: false,\n                            lineStyle: {\n                                color: '#333333'\n                            }\n                        },\n                        axisPointer: {\n                            label: {\n                                formatter: function (params) {\n                                    return '今日  ' + params.value\n                                        + (params.seriesData.length ? '：' + params.seriesData[0].data : '');\n                                }\n                            }\n                        },\n                        data: nowTime\n                    },\n                    {\n                        type: 'category',\n                        axisTick: {\n                            alignWithLabel: true,\n                        },\n                        axisLine: {\n                            onZero: false,\n                            lineStyle: {\n                                color: '#999999'\n                            }\n                        },\n                        axisPointer: {\n                            label: {\n                                formatter: function (params) {\n                                    return '昨日  ' + params.value\n                                        + (params.seriesData.length ? '：' + params.seriesData[0].data : '');\n                                }\n                            }\n                        },\n                        data: lastTime\n                    }\n                ],\n                yAxis: [\n                    {\n                        type: 'value'\n                    }\n                ],\n                series: [\n                    {\n                        name:'今日流量',\n                        type:'line',\n                        xAxisIndex: 1,\n                        smooth: true,\n                        data: nowData\n                    },\n                    {\n                        name:'昨日流量',\n                        type:'line',\n                        smooth: true,\n                        data: lastData\n                    }\n                ]\n            };\n            myChart.setOption(option);\n        }\n    }\n}\n",{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"home\">\n    <Crumb title=\"Home\"/>\n    <div class=\"tetCVM\">\n        <el-row :gutter=\"30\">\n            <el-col :span=\"circle\">\n                <div id=\"tetLoad\" class=\"tetCanvas\"></div>\n            </el-col>\n            <el-col :span=\"circle\">\n                <div id=\"tetCpu\" class=\"tetCanvas\"></div>\n            </el-col>\n            <el-col :span=\"circle\">\n                <div id=\"tetMemory\" class=\"tetCanvas\"></div>\n            </el-col>\n            <el-col :span=\"circle\">\n                <div id=\"tetDisk\" class=\"tetCanvas\"></div>\n            </el-col>\n        </el-row>\n    </div>\n    <div class=\"tetTraffic\">\n        <el-row :gutter=\"0\">\n            <el-col :span=\"isNotice ? 18 : 14\">\n                <div id=\"categroy\"></div>\n            </el-col>\n            <el-col :span=\"isNotice ? 0 : 10\">\n                <div class=\"tetMail\">\n                    <div class=\"tetSystem flex\">\n                        <span class=\"flexLeft\">系统: {{ cvmName }}</span>\n                        <span class=\"flexCenter\">\n                            <el-button type=\"primary\"  size=\"small\" icon=\"el-icon-refresh\" :loading=\"loading\" @click=\"reLoad()\">{{ loadTxt }}</el-button>\n                        </span>\n                    </div>\n                </div>\n            </el-col>\n        </el-row>\n    </div>\n    <template>\n        <el-dialog\n        title=\"请选择安装集成环境\"\n        :visible.sync=\"installDialog\"\n        width=\"42%\"\n        :lock-scroll=\"true\"\n        :close-on-click-modal=\"false\"\n        :close-on-press-escape=\"false\"\n        :show-close=\"false\"\n        center>\n        <div class=\"install\">\n            <el-row :gutter=\"16\">\n                <el-col :span=\"12\">\n                    <el-card shadow=\"always\">\n                        <h3>LAMP</h3>\n                        <div v-for=\"item in lamp\" :key=\"item\" class=\"installItem\">\n                            {{'集成项: ' + item }}\n                        </div>\n                        <el-button type=\"primary\" round @click=\"onInstallLamp()\">一键安装</el-button>\n                    </el-card>\n                </el-col>\n                <el-col :span=\"12\">\n                    <el-card shadow=\"always\">\n                        <h3>LNMP (推荐)</h3>\n                        <div v-for=\"item in lnmp\" :key=\"item\" class=\"installItem\">\n                            {{'集成项: ' + item }}\n                        </div>\n                        <el-button type=\"primary\" round @click=\"onInstallLnmp()\">一键安装</el-button>\n                    </el-card>\n                </el-col>\n            </el-row>\n        </div>\n        </el-dialog>\n    </template>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport axios from 'axios';\nimport Qs from 'qs';\nimport {onTips} from '@/assets/js/common.js';\nimport * as echarts from 'echarts';\nimport Crumb from '@/components/Crumb.vue'\nexport default {\n    props: ['isNotice'],\n    name: 'Home',\n    components: {\n        Crumb\n    },\n    data() {\n        return {\n            installDialog: false,\n            lamp: ['Linux','Apache', 'MySQL', 'PHP'],\n            lnmp: ['Linux','Nginx', 'MySQL', 'PHP'],\n            domLoad: null,\n            domCpu: null,\n            domMemory: null,\n            domDisk: null,\n            nowLoadData: 18,\n            nowCpuData: 18,\n            nowMemoryData: 18,\n            nowDiskData: 18,\n            getLoadData: Number,\n            getCpuData: Number,\n            getMemoryData: Number,\n            getDiskData: Number,\n            dangerColor: '#09BB07',\n            cvmName: '',\n            circle: 5,\n            loading: false,\n            loadTxt: '重启服务器',\n            round: {'load': 0, 'cpu': 0, 'memory': 0, 'disk': 0},\n        }\n    },\n    created() {\n        let that = this;\n\n        axios.post('/api/origin', {}, {})\n        .then(function(res) {\n            if (res.data.status) {\n                if (!res.data.data) {\n                    that.installDialog = true;\n                }\n            } else {\n                onTips(that, 'error', res.data.info);\n            }\n        })\n        .catch(function(err) {\n            onTips(that, 'error', '网络错误~');\n        })\n\n        that.axiosRound();\n        let Timer = setInterval(function() {\n            that.axiosRound();\n        }, 3600);\n\n        axios.post('/api/message', {}, {})\n        .then(function(res) {\n            if (res.data.status) {\n                that.cvmName = res.data.data;\n            } else {\n                onTips(that, 'error', res.data.info);\n            }\n        })\n        .catch(function(err) {\n            onTips(that, 'error', '网络错误~');\n        })\n\n        axios.post('/api/chart', {}, {})\n        .then(function(res){\n            console.log(res);\n            if (res.data.status) {\n                var categroy = echarts.init(document.getElementById('categroy'));\n                that.onCategroy(categroy, res.data.data.ltime, res.data.data.ntime, res.data.data.ldata, res.data.data.ndata);\n            } else {\n                onTips(that, 'error', res.data.info);\n            }\n        })\n        .catch(function(err){\n            onTips(that, 'error', '网络错误~');\n        })\n    },\n    watch: {\n        getLoadData: function() {\n            this.onIncrease(this.domLoad, this.nowLoadData, this.getLoadData);\n        },\n        getCpuData: function() {\n            this.onIncrease(this.domCpu, this.nowCpuData, this.getCpuData);\n        },\n        getMemoryData: function() {\n            this.onIncrease(this.domMemory, this.nowMemoryData, this.getMemoryData);\n        },\n        getDiskData: function() {\n            this.onIncrease(this.domDisk, this.nowDiskData, this.getDiskData);\n        }\n    },\n    mounted: function() {\n        this.$nextTick(function() {\n            this.domLoad = echarts.init(document.getElementById('tetLoad'));\n            this.domCpu = echarts.init(document.getElementById('tetCpu'));\n            this.domMemory = echarts.init(document.getElementById('tetMemory'));\n            this.domDisk = echarts.init(document.getElementById('tetDisk'));\n            this.onInitialize(this.domLoad, '负载均衡', this.nowLoadData);\n            this.onInitialize(this.domCpu, 'CPU使用率', this.nowCpuData);\n            this.onInitialize(this.domMemory, '内存使用率', this.nowMemoryData);\n            this.onInitialize(this.domDisk, '硬盘使用率', this.nowDiskData);\n        })\n    },\n    methods: {\n        onInstallLamp: function() {\n            let that = this;\n            axios.post('/shell/lamp', {}, {})\n            .then(function(res){\n                if (res.data.status) {\n                    console.log(res);\n                } else {\n                    onTips(that, 'error', res.data.info);\n                }\n            })\n            .catch(function(err){\n                onTips(that, 'error', '网络错误~');\n            })\n        },\n        onInstallLnmp: function() {\n            let that = this;\n            axios.post('/shell/lnmp', {}, {})\n            .then(function(res){\n                if (res.data.status) {\n                    that.installDialog = false;\n                } else {\n                    onTips(that, 'error', res.data.info);\n                }\n            })\n            .catch(function(err){\n                onTips(that, 'error', '网络错误~');\n            })\n        },\n        axiosRound: function() {\n            let that = this;\n            axios.post('/api/round', {}, {})\n            .then(function(res){\n                console.log(res.data);\n                if (res.data.status) {\n                    let Data = res.data.data;\n                    that.getLoadData = Data.load;\n                    that.getCpuData = Data.cpu;\n                    that.getMemoryData = Data.memory;\n                    that.getDiskData = Data.disk;\n                } else {\n                    onTips(that, 'error', res.data.info);\n                }\n            })\n            .catch(function(err){\n                onTips(that, 'error', '网络错误~');\n            })\n        },\n        //初始化数据\n        onInitialize: function(myChart, Title, Data) {\n            var option = {\n                title: {\n                    text: Title,\n                    left: 'center',\n                    bottom: 4,\n                    textStyle: {\n                        fontSize: 16,\n                        fontWeight: 'normal',\n                        color: '#666666'\n                    }\n                },\n                tooltip: {\n                    show: true,\n                    confine: true,\n                    trigger: 'item',\n                    formatter: \"{a} <br/> 比例：( {d}% )\"\n                },\n                color: ['#b2b2b2', this.dangerColor],\n                calculable : false,\n                series: [{\n                    name: Title,\n                    type:'pie',\n                    radius: ['47%', '60%'],\n                    hoverAnimation: false,\n                    legendHoverLink: false,\n                    avoidLabelOverlap: false,\n                    label: {\n                        normal: {\n                            show: false,\n                            position: 'center'\n                        },\n                        emphasis: {\n                            show: false\n                        }\n                    },\n                    labelLine: {\n                        normal: {\n                            show: false\n                        }\n                    },\n                    data:[\n                        {value: (100-Data).toFixed(1), name: (100-Data).toFixed(1) + '%'},\n                        {value: Data.toFixed(1), name: Data.toFixed(1) + '%', label: {show: true , fontSize: '19',  fontWeight: 'bold'}},\n                    ]\n                }]\n            };\n            myChart.setOption(option);\n        },\n        //数据动态增减\n        onIncrease: function(myChart, nowData, getData) {\n            let that = this;\n            if (nowData != getData) {\n                let timer = setInterval(function() {\n                    if (nowData < getData) {\n                        nowData++;\n                        that.onApply(myChart, nowData);\n                        if (nowData >= getData) {\n                            that.nowLoadData = that.getLoadData;\n                            that.nowCpuData = that.getCpuData;\n                            that.nowMemoryData = that.getMemoryData;\n                            that.nowDiskData = that.getDiskData;\n                            clearInterval(timer);\n                        }\n                    }\n\n                    if (nowData > getData) {\n                        nowData--;\n                        that.onApply(myChart, nowData);\n                        if (nowData <= getData) {\n                            that.nowLoadData = that.getLoadData;\n                            that.nowCpuData = that.getCpuData;\n                            that.nowMemoryData = that.getMemoryData;\n                            that.nowDiskData = that.getDiskData;\n                            clearInterval(timer);\n                        }\n                    }\n                }, 45);\n            }\n        },\n        onApply: function(myChart, Data) {\n            let that = this;\n            Data > 68 ? (Data > 86 ? (this.dangerColor = '#b44038'):(this.dangerColor = '#c9856b')):(this.dangerColor = '#09BB07');\n            myChart.setOption({\n                animation: false,\n                color: ['#b2b2b2', this.dangerColor],\n                series: [{\n                    data:[\n                        {value: (100-Data).toFixed(1), name: (100-Data).toFixed(1)+ '%'},\n                        {value: Data.toFixed(1), name: Data.toFixed(1) + '%', label: {show: true , fontSize: '19',  fontWeight: 'bold'}},\n                    ]\n                }]\n            })\n        },\n        reLoad: function() {\n            let that = this;\n            if (!that.loading) {\n                that.loading = true;\n                that.loadTxt = '重启中...';\n                axios.post('/api/restart', {}, {})\n                .then(function(res) {\n                    if (res.data.status) {\n                        that.loading = false;\n                        that.loadTxt = '重启服务器';\n                    }\n                    console.log(res);\n                })\n                .catch(function(err) {\n                    console.log(err);\n                })\n            }\n        },\n        onCategroy: function(myChart, lastTime, nowTime, lastData, nowData) {\n            var option = {\n                color: ['#e64340', '#09BB07'],\n                tooltip: {\n                    trigger: 'none',\n                    axisPointer: {\n                        type: 'cross'\n                    }\n                },\n                legend: {\n                    data:['昨日流量', '今日流量']\n                },\n                grid: {\n                    top: 70,\n                    bottom: 42\n                },\n                xAxis: [\n                    {\n                        type: 'category',\n                        axisTick: {\n                            alignWithLabel: true\n                        },\n                        axisLine: {\n                            onZero: false,\n                            lineStyle: {\n                                color: '#333333'\n                            }\n                        },\n                        axisPointer: {\n                            label: {\n                                formatter: function (params) {\n                                    return '今日  ' + params.value\n                                        + (params.seriesData.length ? '：' + params.seriesData[0].data : '');\n                                }\n                            }\n                        },\n                        data: nowTime\n                    },\n                    {\n                        type: 'category',\n                        axisTick: {\n                            alignWithLabel: true,\n                        },\n                        axisLine: {\n                            onZero: false,\n                            lineStyle: {\n                                color: '#999999'\n                            }\n                        },\n                        axisPointer: {\n                            label: {\n                                formatter: function (params) {\n                                    return '昨日  ' + params.value\n                                        + (params.seriesData.length ? '：' + params.seriesData[0].data : '');\n                                }\n                            }\n                        },\n                        data: lastTime\n                    }\n                ],\n                yAxis: [\n                    {\n                        type: 'value'\n                    }\n                ],\n                series: [\n                    {\n                        name:'今日流量',\n                        type:'line',\n                        xAxisIndex: 1,\n                        smooth: true,\n                        data: nowData\n                    },\n                    {\n                        name:'昨日流量',\n                        type:'line',\n                        smooth: true,\n                        data: lastData\n                    }\n                ]\n            };\n            myChart.setOption(option);\n        }\n    }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"less\">\n.tetCVM {\n    margin: 0 auto;\n    padding: 0 0 16px 0;\n    width: 97%;\n    border-bottom: 2px solid #f0f2f5;\n}\n.tetCanvas {\n    width: 200px;\n    height: 230px;\n}\n.tetTraffic {\n    margin: 0 auto;\n    width: 97%;\n}\n#categroy {\n    margin: 16px 0 0 0;\n    width: 100%;\n    height: 400px;    \n}\n.tetMail {\n    margin: 16px 0 0 0;\n    padding: 8px 12px;\n    height: 400px;\n    border-left: 2px solid #f0f2f5;\n}\n.tetSystem {\n    padding: 8px;\n    border-bottom: 1px solid #f0f2f5;\n}\n.tetSystem span:first-child{\n    flex: 4,\n}\n.tetSystem span:last-child {\n    flex: 1,\n}\n.install h3 {\n    margin: 12px 0;\n}\n.installItem {\n    font-size: 15px;\n    color: #666666;\n}\n\n</style>"]}]}