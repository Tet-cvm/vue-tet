{"remainingRequest":"/Users/const/Documents/Vue/tet/node_modules/babel-loader/lib/index.js!/Users/const/Documents/Vue/tet/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/const/Documents/Vue/tet/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/const/Documents/Vue/tet/src/components/Terminal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/const/Documents/Vue/tet/src/components/Terminal.vue","mtime":1557365307793},{"path":"/Users/const/Documents/Vue/tet/node_modules/cache-loader/dist/cjs.js","mtime":1552975946601},{"path":"/Users/const/Documents/Vue/tet/node_modules/babel-loader/lib/index.js","mtime":1552975946378},{"path":"/Users/const/Documents/Vue/tet/node_modules/cache-loader/dist/cjs.js","mtime":1552975946601},{"path":"/Users/const/Documents/Vue/tet/node_modules/vue-loader/lib/index.js","mtime":1552975955943}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'Terminal',\n  data: function data() {\n    return {\n      txt: '999'\n    };\n  },\n  created: function created() {\n    var that = this;\n    var namespace = '/test'; // var socket = io.connect(location.protocol + '//' + document.domain + ':' + location.port + namespace);\n\n    var socket = io.connect(location.protocol + '//' + '169.254.100.201' + ':' + '5000' + namespace); // socket.on('connect', function() {\n    //     socket.emit('my_event', {data: 'I\\'m connected!'});\n    // });\n    // socket.on('my_response', function(msg) {\n    //     // $('#log').append('<br>' + $('<div/>').text('Received #' + msg.count + ': ' + msg.data).html());\n    //     that.txt = that.txt + msg.data;\n    // });\n  },\n  mounted: function mounted() {},\n  methods: {\n    // onConnect: function() {\n    //     socket.on('connect', function() {\n    //         socket.emit('my_event', {data: 'I\\'m connected!'});\n    //     });\n    //     that.onMessage()\n    // },\n    onMessage: function onMessage() {\n      socket.on('my_response', function (msg) {\n        // $('#log').append('<br>' + $('<div/>').text('Received #' + msg.count + ': ' + msg.data).html());\n        that.txt = that.txt + msg.data;\n      });\n    },\n    onClose: function onClose() {\n      socket.emit('disconnect_request');\n    },\n    onSocket: function onSocket() {\n      console.log('onSocket');\n    }\n  }\n};",{"version":3,"sources":["Terminal.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAWA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,GAAA,EAAA;AADA,KAAA;AAGA,GANA;AAOA,EAAA,OAPA,qBAOA;AACA,QAAA,IAAA,GAAA,IAAA;AACA,QAAA,SAAA,GAAA,OAAA,CAFA,CAGA;;AACA,QAAA,MAAA,GAAA,EAAA,CAAA,OAAA,CAAA,QAAA,CAAA,QAAA,GAAA,IAAA,GAAA,iBAAA,GAAA,GAAA,GAAA,MAAA,GAAA,SAAA,CAAA,CAJA,CAMA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA,GArBA;AAsBA,EAAA,OAtBA,qBAsBA,CAEA,CAxBA;AAyBA,EAAA,OAAA,EAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA,IAAA,SAAA,EAAA,qBAAA;AACA,MAAA,MAAA,CAAA,EAAA,CAAA,aAAA,EAAA,UAAA,GAAA,EAAA;AACA;AACA,QAAA,IAAA,CAAA,GAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,CAAA,IAAA;AACA,OAHA;AAIA,KAbA;AAcA,IAAA,OAAA,EAAA,mBAAA;AACA,MAAA,MAAA,CAAA,IAAA,CAAA,oBAAA;AACA,KAhBA;AAiBA,IAAA,QAAA,EAAA,oBAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,UAAA;AACA;AAnBA;AAzBA,CAAA","sourcesContent":["<template>\n    <div class=\"terminal\">\n        terminal {{ txt }}\n\n        <div @click=\"onConnect()\">连接</div>\n        <div @click=\"onMessage()\">发消息</div>\n        <div @click=\"onClose()\">关闭</div>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'Terminal',\n    data() {\n        return {\n            txt: '999'\n        }\n    },\n    created() {\n        let that = this;\n        let namespace = '/test';\n        // var socket = io.connect(location.protocol + '//' + document.domain + ':' + location.port + namespace);\n        var socket = io.connect(location.protocol + '//' + '169.254.100.201' + ':' + '5000' + namespace);\n\n        // socket.on('connect', function() {\n        //     socket.emit('my_event', {data: 'I\\'m connected!'});\n        // });\n\n        // socket.on('my_response', function(msg) {\n        //     // $('#log').append('<br>' + $('<div/>').text('Received #' + msg.count + ': ' + msg.data).html());\n        //     that.txt = that.txt + msg.data;\n        // });\n    },\n    mounted() {\n\n    },\n    methods: {\n        // onConnect: function() {\n        //     socket.on('connect', function() {\n        //         socket.emit('my_event', {data: 'I\\'m connected!'});\n        //     });\n\n        //     that.onMessage()\n        // },\n        onMessage: function() {\n            socket.on('my_response', function(msg) {\n                // $('#log').append('<br>' + $('<div/>').text('Received #' + msg.count + ': ' + msg.data).html());\n                that.txt = that.txt + msg.data;\n            });\n        },\n        onClose: function() {\n            socket.emit('disconnect_request');\n        },\n        onSocket: function() {\n            console.log('onSocket')\n        }\n    }\n}\n</script>\n\n<style>\n.terminal {\n    background-color: red;\n}\n</style>\n\n\n"],"sourceRoot":"src/components"}]}