{"remainingRequest":"/Users/const/Documents/Vue/vue-tet/node_modules/thread-loader/dist/cjs.js!/Users/const/Documents/Vue/vue-tet/node_modules/babel-loader/lib/index.js!/Users/const/Documents/Vue/vue-tet/node_modules/ts-loader/index.js??ref--13-3!/Users/const/Documents/Vue/vue-tet/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/const/Documents/Vue/vue-tet/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/const/Documents/Vue/vue-tet/src/components/Group.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/const/Documents/Vue/vue-tet/src/components/Group.vue","mtime":1553245384249},{"path":"/Users/const/Documents/Vue/vue-tet/node_modules/cache-loader/dist/cjs.js","mtime":1552975946601},{"path":"/Users/const/Documents/Vue/vue-tet/node_modules/thread-loader/dist/cjs.js","mtime":1552975955420},{"path":"/Users/const/Documents/Vue/vue-tet/node_modules/babel-loader/lib/index.js","mtime":1552975946378},{"path":"/Users/const/Documents/Vue/vue-tet/node_modules/ts-loader/index.js","mtime":1552975955462},{"path":"/Users/const/Documents/Vue/vue-tet/node_modules/cache-loader/dist/cjs.js","mtime":1552975946601},{"path":"/Users/const/Documents/Vue/vue-tet/node_modules/vue-loader/lib/index.js","mtime":1552975955943}],"contextDependencies":[],"result":["import axios from 'axios';\nimport Qs from 'qs';\nimport { onTips } from '@/assets/js/common.js';\nimport Crumb from '@/components/Crumb.vue';\nexport default {\n  name: 'Group',\n  components: {\n    Crumb: Crumb\n  },\n  data: function data() {\n    return {\n      userData: [],\n      dialogAdd: false,\n      addStatus: false,\n      add: {\n        username: '',\n        realname: '',\n        level: '',\n        password: ''\n      },\n      dialogEdit: false,\n      editStatus: false,\n      edit: {\n        id: '',\n        username: '',\n        realname: '',\n        password: '',\n        oldpwd: ''\n      },\n      dialogDelete: false,\n      del: {\n        id: '',\n        index: ''\n      },\n      options: [{\n        value: 0,\n        label: '超级管理员',\n        disabled: true\n      }, {\n        value: 1,\n        label: '管理员'\n      }, {\n        value: 2,\n        label: '用户'\n      }]\n    };\n  },\n  created: function created() {\n    var that = this;\n    axios.post('/api/list', {}, {}).then(function (res) {\n      if (res.data.status) {\n        that.userData = res.data.data;\n      } else {\n        onTips(that, 'error', res.data.info);\n      }\n    }).catch(function (err) {\n      onTips(that, 'error', '网络错误～');\n    });\n  },\n  watch: {\n    add: {\n      handler: function handler() {\n        if (this.add.username != '' && this.add.realname != '' && this.add.password != '') {\n          this.addStatus = true;\n        } else {\n          this.addStatus = false;\n        }\n      },\n      deep: true\n    },\n    edit: {\n      handler: function handler() {\n        if (this.edit.username != '' && this.edit.realname != '' && this.edit.password != '******') {\n          this.editStatus = true;\n        } else {\n          this.editStatus = false;\n        }\n      },\n      deep: true\n    }\n  },\n  methods: {\n    handleAdd: function handleAdd(index, row) {\n      this.dialogAdd = true;\n    },\n    handleEdit: function handleEdit(index, row) {\n      this.dialogEdit = true;\n      this.edit.id = row.id;\n      this.edit.username = row.username;\n      this.edit.realname = row.realname;\n      this.edit.password = '';\n      this.edit.index = index;\n    },\n    handleDelete: function handleDelete(index, row) {\n      this.dialogDelete = true;\n      this.del.id = row.id;\n      this.del.index = index;\n    },\n    onAdd: function onAdd() {\n      var that = this;\n      var data = {\n        level: that.add.level,\n        username: that.add.username,\n        realname: that.add.realname,\n        password: that.add.password\n      };\n      axios.post('/api/add', Qs.stringify(data), {}).then(function (res) {\n        if (res.data.status) {\n          that.dialogAdd = false;\n          that.userData.push(res.data.data[0]);\n          onTips(that, 'success', res.data.info);\n        } else {\n          onTips(that, 'error', res.data.info);\n        }\n      }).catch(function (err) {\n        onTips(that, 'error', '网络错误～');\n      });\n    },\n    onEdit: function onEdit() {\n      var that = this;\n      var data = {\n        id: that.edit.id,\n        username: that.edit.username,\n        realname: that.edit.realname,\n        password: that.edit.password,\n        oldpwd: that.edit.oldpwd\n      };\n      axios.post('/api/edit', Qs.stringify(data), {}).then(function (res) {\n        if (res.data.status) {\n          var index = that.edit.index;\n          that.userData[index].username = that.edit.username;\n          that.userData[index].realname = that.edit.realname;\n          that.dialogEdit = false;\n          onTips(that, 'success', res.data.info);\n        } else {\n          onTips(that, 'error', res.data.info);\n        }\n      }).catch(function (err) {\n        onTips(that, 'error', '网络错误～');\n      });\n    },\n    onDelete: function onDelete() {\n      var that = this;\n      this.dialogDelete = false;\n      var data = {\n        id: that.del.id\n      };\n      axios.post('/api/delete', Qs.stringify(data), {}).then(function (res) {\n        if (res.data.status) {\n          that.userData.splice(that.del.index, 1);\n          onTips(that, 'success', res.data.info);\n        } else {\n          onTips(that, 'error', res.data.info);\n        }\n      }).catch(function (err) {\n        onTips(that, 'error', '网络错误～');\n      });\n    },\n    onLevel: function onLevel(level) {\n      var _level;\n\n      switch (level) {\n        case 0:\n          _level = '超级管理员';\n          break;\n\n        case 1:\n          _level = '管理员';\n          break;\n\n        case 2:\n          _level = '用户';\n          break;\n      }\n\n      return _level;\n    }\n  }\n};",null]}