{"remainingRequest":"/Users/const/Documents/Vue/tet/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/const/Documents/Vue/tet/src/components/Online.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/const/Documents/Vue/tet/src/components/Online.vue","mtime":1557140735268},{"path":"/Users/const/Documents/Vue/tet/node_modules/babel-loader/lib/index.js","mtime":1552975946378},{"path":"/Users/const/Documents/Vue/tet/node_modules/ts-loader/index.js","mtime":1552975955462},{"path":"/Users/const/Documents/Vue/tet/node_modules/cache-loader/dist/cjs.js","mtime":1552975946601},{"path":"/Users/const/Documents/Vue/tet/node_modules/vue-loader/lib/index.js","mtime":1552975955943}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport axios from 'axios';\nimport Qs from 'qs';\nimport {onTips} from '@/assets/js/common.js';\nimport Swiper from 'swiper';\nimport 'swiper/dist/css/swiper.min.css';\nimport Terminal from '@/components/Terminal.vue'\nexport default {\n    name: 'Online',\n    data() {\n      return {\n        complete: false,\n        total: Number,\n        listData: [],\n        site: '',\n        siteData: [],\n        branch: '',\n        branchData: [\n          { value: 1, label: 'aa' },\n        ],\n        version: 0,\n        versionData: []\n      }\n    },\n    components: {\n      Terminal\n    },\n    created() {\n      let that = this;\n      that.onInstance();\n      that.onRender(1);\n      \n    },\n    mounted() {\n      let that = this;\n      var mySwiper = new Swiper('.swiper-container', {\n          direction : 'vertical',\n          slidesPerView: 'auto',\n          initialSlide: 0,\n          resistanceRatio: 0,\n          slideToClickedSlide: true\n      });\n    },\n    methods: {\n      onRender: function(page) {\n        let that = this;\n        let data = {\n          'page': page\n        }\n        axios.post('/api/render', Qs.stringify(data), {})\n        .then(function(res) {\n          console.log(res);\n          if (res.data.status) {\n            that.listData = res.data.data.list;\n            that.total = res.data.data.page;\n          } else {\n            onTips(that, 'error', res.data.info);\n          }\n          that.complete = true;\n        })\n        .catch(function(err) {\n          onTips(that, 'error', '网络错误～');\n        })\n      },\n      onInstance: function() {\n        let that = this;\n        axios.post('/api/instance', {}, {})\n        .then(function(res) {\n          if (res.data.status) {\n            let resData = res.data.data.site;\n            let verData = res.data.data.version;\n            let braData = res.data.data.branch;\n\n            let site = '';\n            let siteData = [];\n            for (let i=0; i<resData.length; i++) {\n              if (resData[i].active) {\n                site = resData[i].id;\n              }\n              let data = {value: resData[i].id, label: resData[i].domain, status: resData[i].status, type: resData[i].type == 2 ? 'svn' : 'git'};\n              siteData.unshift(data);\n            }\n            that.siteData = siteData;\n            that.site = site;\n\n            // let version = '';\n            let versionData = [];\n\n            for (let i=0; i<verData.length; i++) {\n              let data = {value: i, author: verData[i].author, label: verData[i].version}\n              versionData.push(data) \n            }\n            that.versionData = versionData;\n\n            // let branch = '';\n            let branchData = [];\n\n            for (let i=0; i<braData.length; i++) {\n              let data = {value: i, label: braData[i]}\n              branchData.push(data)\n            }\n            that.branchData = branchData;\n            that.branch = res.data.data.init;\n\n          } else {\n            onTips(that, 'error', res.data.info);\n          }\n        })\n        .catch(function(err) {\n          onTips(that, 'error', '网络错误～');\n        })\n      },\n      onRelease: function() {\n        let that = this;\n        axios.post('/api/submit', {}, {})\n        .then(function(res) {\n          if (res.data.status) {\n            console.log('success')\n          } else {\n            onTips(that, 'error', res.data.info);\n          }\n        })\n        .catch(function(err) {\n          onTips(that, 'error', '网络错误～');\n        })\n      },\n      onRollBack: function(index, row) {\n        console.log(index, row);\n        let that = this;\n        axios.post('/api/rollback', {}, {})\n        .then(function(res) {\n          console.log(res, 'rollback')\n          if (res.data.status) {\n            console.log('aaa')\n          } else {\n            onTips(that, 'error', res.data.info);\n          }\n        })\n        .catch(function(err) {\n          onTips(that, 'error', '网络错误～');\n        })\n      },\n      onSelect: function() {\n        console.log(this.site);\n      }\n    }\n}\n",null]}