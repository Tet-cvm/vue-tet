{"remainingRequest":"/Users/const/Documents/Vue/vue-tet/node_modules/thread-loader/dist/cjs.js!/Users/const/Documents/Vue/vue-tet/node_modules/babel-loader/lib/index.js!/Users/const/Documents/Vue/vue-tet/node_modules/ts-loader/index.js??ref--13-3!/Users/const/Documents/Vue/vue-tet/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/const/Documents/Vue/vue-tet/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/const/Documents/Vue/vue-tet/src/components/Online.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/const/Documents/Vue/vue-tet/src/components/Online.vue","mtime":1557630235259},{"path":"/Users/const/Documents/Vue/vue-tet/node_modules/cache-loader/dist/cjs.js","mtime":1552975946601},{"path":"/Users/const/Documents/Vue/vue-tet/node_modules/thread-loader/dist/cjs.js","mtime":1552975955420},{"path":"/Users/const/Documents/Vue/vue-tet/node_modules/babel-loader/lib/index.js","mtime":1552975946378},{"path":"/Users/const/Documents/Vue/vue-tet/node_modules/ts-loader/index.js","mtime":1552975955462},{"path":"/Users/const/Documents/Vue/vue-tet/node_modules/cache-loader/dist/cjs.js","mtime":1552975946601},{"path":"/Users/const/Documents/Vue/vue-tet/node_modules/vue-loader/lib/index.js","mtime":1552975955943}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\nimport axios from 'axios';\nimport Qs from 'qs';\nimport { onTips } from '@/assets/js/common.js';\nimport Swiper from 'swiper';\nimport 'swiper/dist/css/swiper.min.css';\nimport Terminal from '@/components/Terminal.vue';\nexport default {\n  name: 'Online',\n  data: function data() {\n    return {\n      complete: false,\n      total: Number,\n      listData: [],\n      site: '',\n      siteData: [],\n      branch: '',\n      branchData: [{\n        value: 1,\n        label: 'aa'\n      }],\n      version: 0,\n      versionData: []\n    };\n  },\n  components: {\n    Terminal: Terminal\n  },\n  created: function created() {\n    var that = this;\n    that.onInstance();\n    that.onRender(1);\n  },\n  mounted: function mounted() {\n    var that = this;\n    var mySwiper = new Swiper('.swiper-container', {\n      direction: 'vertical',\n      slidesPerView: 'auto',\n      initialSlide: 0,\n      resistanceRatio: 0,\n      slideToClickedSlide: true\n    });\n  },\n  methods: {\n    onRender: function onRender(page) {\n      var that = this;\n      var data = {\n        'page': page\n      };\n      axios.post('/api/render', Qs.stringify(data), {}).then(function (res) {\n        console.log(res);\n\n        if (res.data.status) {\n          that.listData = res.data.data.list;\n          that.total = res.data.data.page;\n        } else {\n          onTips(that, 'error', res.data.info);\n        }\n\n        that.complete = true;\n      }).catch(function (err) {\n        onTips(that, 'error', '网络错误～');\n      });\n    },\n    onInstance: function onInstance() {\n      var that = this;\n      axios.post('/api/instance', {}, {}).then(function (res) {\n        if (res.data.status) {\n          var resData = res.data.data.site;\n          var verData = res.data.data.version;\n          var braData = res.data.data.branch;\n          var site = '';\n          var siteData = [];\n\n          for (var i = 0; i < resData.length; i++) {\n            if (resData[i].active) {\n              site = resData[i].id;\n            }\n\n            var data = {\n              value: resData[i].id,\n              label: resData[i].domain,\n              status: resData[i].status,\n              type: resData[i].type == 2 ? 'svn' : 'git'\n            };\n            siteData.unshift(data);\n          }\n\n          that.siteData = siteData;\n          that.site = site; // let version = '';\n\n          var versionData = [];\n\n          for (var _i = 0; _i < verData.length; _i++) {\n            var _data = {\n              value: _i,\n              author: verData[_i].author,\n              label: verData[_i].version\n            };\n            versionData.push(_data);\n          }\n\n          that.versionData = versionData; // let branch = '';\n\n          var branchData = [];\n\n          for (var _i2 = 0; _i2 < braData.length; _i2++) {\n            var _data2 = {\n              value: _i2,\n              label: braData[_i2]\n            };\n            branchData.push(_data2);\n          }\n\n          that.branchData = branchData;\n          that.branch = res.data.data.init;\n        } else {\n          onTips(that, 'error', res.data.info);\n        }\n      }).catch(function (err) {\n        onTips(that, 'error', '网络错误～');\n      });\n    },\n    onRelease: function onRelease() {\n      var that = this;\n      var data = {\n        version: that.versionData[that.version].label\n      };\n      console.log(data, 'that.version');\n      axios.post('/api/submit', Qs.stringify(data), {}).then(function (res) {\n        console.log(res, '/api/submit');\n\n        if (res.data.status) {\n          console.log('success');\n        } else {\n          onTips(that, 'error', res.data.info);\n        }\n      }).catch(function (err) {\n        onTips(that, 'error', '网络错误～');\n      });\n    },\n    onRollBack: function onRollBack(index, row) {\n      console.log(index, row);\n      var that = this;\n      axios.post('/api/rollback', {}, {}).then(function (res) {\n        console.log(res, 'rollback');\n\n        if (res.data.status) {\n          console.log('aaa');\n        } else {\n          onTips(that, 'error', res.data.info);\n        }\n      }).catch(function (err) {\n        onTips(that, 'error', '网络错误～');\n      });\n    },\n    onSelect: function onSelect() {\n      console.log(this.site);\n    }\n  }\n};",null]}