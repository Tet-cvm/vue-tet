{"remainingRequest":"/Users/const/Documents/Movie/Slog/node_modules/babel-loader/lib/index.js!/Users/const/Documents/Movie/Slog/node_modules/ts-loader/index.js??ref--14-2!/Users/const/Documents/Movie/Slog/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/const/Documents/Movie/Slog/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/const/Documents/Movie/Slog/src/components/Movie.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/const/Documents/Movie/Slog/src/components/Movie.vue","mtime":1571136246630},{"path":"/Users/const/Documents/Movie/Slog/node_modules/cache-loader/dist/cjs.js","mtime":1552975946601},{"path":"/Users/const/Documents/Movie/Slog/node_modules/babel-loader/lib/index.js","mtime":1552975946378},{"path":"/Users/const/Documents/Movie/Slog/node_modules/ts-loader/index.js","mtime":1552975955462},{"path":"/Users/const/Documents/Movie/Slog/node_modules/cache-loader/dist/cjs.js","mtime":1552975946601},{"path":"/Users/const/Documents/Movie/Slog/node_modules/vue-loader/lib/index.js","mtime":1552975955943}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport _Date$now from \"/Users/const/Documents/Movie/Slog/node_modules/@babel/runtime-corejs2/core-js/date/now\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.search\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\nexport default {\n  name: 'Movie',\n  data: function data() {\n    return {\n      search: '',\n      select: 'aaa',\n      tableHeight: '',\n      movieData: [],\n      items: [{\n        type: 'primary',\n        label: '院线'\n      }, {\n        type: 'success',\n        label: '自制'\n      }, {\n        type: 'info',\n        label: '动作'\n      }, {\n        type: 'warning',\n        label: '喜剧'\n      }, {\n        type: 'danger',\n        label: '科幻'\n      }, {\n        type: 'primary',\n        label: '犯罪'\n      }, {\n        type: 'success',\n        label: '爱情'\n      }],\n      dialogAdd: false,\n      addForm: {\n        img: '',\n        imageUrl: '',\n        star: '',\n        score: '',\n        describe: '',\n        name: '',\n        series: [],\n        domains: [{\n          value: ''\n        }]\n      },\n      addRules: {\n        star: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }, {\n          min: 2,\n          max: 200,\n          message: '长度在 2 到 200 个字符',\n          trigger: 'blur'\n        }],\n        score: [{\n          required: true,\n          message: '请输入电影评分',\n          trigger: 'blur'\n        }, {\n          min: 2,\n          max: 10,\n          message: '长度在 2 到 10 个字符',\n          trigger: 'blur'\n        }],\n        describe: [{\n          required: true,\n          message: '请输入电影简介',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 500,\n          message: '长度在 1 到 500 个字符',\n          trigger: 'blur'\n        }],\n        name: [{\n          required: true,\n          message: '请输入电影名称',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 100,\n          message: '长度在 1 到 100 个字符',\n          trigger: 'blur'\n        }],\n        series: [{\n          type: 'array',\n          required: true,\n          message: '请至少选择一个类别',\n          trigger: 'change'\n        }]\n      },\n      dialogEdit: false,\n      editForm: {\n        id: Number,\n        index: Number,\n        img: '',\n        imageUrl: '',\n        star: '',\n        score: '',\n        describe: '',\n        name: '',\n        series: [],\n        domains: [{\n          value: ''\n        }]\n      },\n      editRules: {\n        star: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }, {\n          min: 2,\n          max: 200,\n          message: '长度在 2 到 200 个字符',\n          trigger: 'blur'\n        }],\n        score: [{\n          required: true,\n          message: '请输入电影评分',\n          trigger: 'blur'\n        }, {\n          min: 2,\n          max: 10,\n          message: '长度在 2 到 10 个字符',\n          trigger: 'blur'\n        }],\n        describe: [{\n          required: true,\n          message: '请输入电影简介',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 500,\n          message: '长度在 1 到 500 个字符',\n          trigger: 'blur'\n        }],\n        name: [{\n          required: true,\n          message: '请输入电影名称',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 100,\n          message: '长度在 1 到 100 个字符',\n          trigger: 'blur'\n        }],\n        series: [{\n          type: 'array',\n          required: true,\n          message: '请至少选择一个类别',\n          trigger: 'change'\n        }]\n      },\n      dialogDel: false,\n      delForm: {\n        index: Number,\n        id: ''\n      }\n    };\n  },\n  created: function created() {\n    var that = this;\n    that.$axios.post('/api/movie/list', {}, {}).then(function (res) {\n      console.log(res, '/api/movie/list');\n\n      if (res.data.length > 0) {\n        that.movieData = res.data;\n      } else {\n        that.dialogAdd = true;\n      }\n    }).catch(function (err) {\n      that.$toast(that, 'error', '网络错误～');\n      that.loading = false;\n    });\n  },\n  mounted: function mounted() {\n    var that = this;\n    that.tableHeight = that.$refs.movie.offsetHeight - that.$refs.search.offsetHeight - 80;\n  },\n  methods: {\n    onSearch: function onSearch() {\n      var that = this;\n\n      if (that.search) {\n        var data = {\n          search: that.search\n        };\n        that.$axios.post('/api/movie/search', that.$qs.stringify(data), {}).then(function (res) {\n          console.log(res, '/api/movie/search');\n\n          if (res.data.status) {\n            that.movieData = res.data.data;\n            that.$toast(that, 'success', res.data.message);\n          } else {\n            that.$toast(that, 'error', res.data.message);\n          }\n        }).catch(function (err) {\n          that.$toast(that, 'error', '网络错误～');\n          that.loading = false;\n        });\n      } else {\n        that.$toast(that, 'error', '请输入内容～');\n      }\n    },\n    onTag: function onTag(index) {\n      var that = this;\n      var data = {\n        tag: that.items[index].label\n      };\n      that.$axios.post('/api/movie/tag', that.$qs.stringify(data), {}).then(function (res) {\n        console.log(res, '/api/movie/tag');\n\n        if (res.data.status) {\n          that.movieData = res.data.data;\n          that.$toast(that, 'success', res.data.message);\n        } else {\n          that.$toast(that, 'error', res.data.message);\n        }\n      }).catch(function (err) {\n        that.$toast(that, 'error', '网络错误～');\n      });\n    },\n    onFilter: function onFilter(data, type) {\n      switch (type) {\n        case 1:\n          var _star = data.split(';');\n\n          var str = '';\n\n          for (var i = 0; i < _star.length; i++) {\n            str += '[' + _star[i] + ']';\n          }\n\n          return str;\n          break;\n\n        case 2:\n          console.log(data, '2222');\n          var list = '';\n\n          for (var _i = 0; _i < data.length; _i++) {\n            list += '[' + data[_i] + ']';\n          }\n\n          return list;\n          break;\n      }\n    },\n    addDomain: function addDomain(status) {\n      status ? this.addForm.domains.push({\n        value: '',\n        key: _Date$now()\n      }) : this.editForm.domains.push({\n        value: '',\n        key: _Date$now()\n      });\n    },\n    removeDomain: function removeDomain(item, status) {\n      if (status) {\n        var index = this.addForm.domains.indexOf(item);\n\n        if (index !== -1) {\n          this.addForm.domains.splice(index, 1);\n        }\n      } else {\n        var index = this.editForm.domains.indexOf(item);\n\n        if (index !== -1) {\n          this.editForm.domains.splice(index, 1);\n        }\n      }\n    },\n    beforeAvatarUpload: function beforeAvatarUpload(file) {\n      var that = this;\n      var isJPG = file.type === 'image/jpeg' || file.type === 'image/png';\n      var isLt2M = file.size / 1024 / 1024 < 2;\n\n      if (!isJPG) {\n        that.$toast(that, 'error', '上传头像图片只能是 JPG PNG 格式!');\n        return;\n      }\n\n      if (!isLt2M) {\n        that.$toast(that, 'error', '上传头像图片大小不能超过 2MB!');\n        return;\n      }\n\n      return isJPG && isLt2M;\n    },\n    handleAvatarSuccess: function handleAvatarSuccess(res, file) {\n      console.log(res, file, 'handleAvatarSuccess');\n\n      if (this.dialogAdd) {\n        this.addForm.img = res;\n        this.addForm.imageUrl = URL.createObjectURL(file.raw);\n      } else if (this.dialogEdit) {\n        this.editForm.img = res;\n        this.editForm.imageUrl = URL.createObjectURL(file.raw);\n      }\n    },\n    handleAdd: function handleAdd(index, row) {\n      this.dialogAdd = true;\n    },\n    onAddSubmit: function onAddSubmit(addForm) {\n      var that = this;\n      that.$refs[addForm].validate(function (valid) {\n        if (valid) {\n          that.$axios.post('/api/movie/add', that.$qs.stringify(that.addForm), {}).then(function (res) {\n            console.log(res, '/api/movie/add');\n\n            if (res.data.status) {\n              that.dialogAdd = false;\n              that.movieData.push(res.data.data[0]);\n              that.$toast(that, 'success', res.data.message);\n              console.log(that.movieData, 'movieData');\n            } else {\n              that.$toast(that, 'error', res.data.message);\n            }\n          }).catch(function (err) {\n            that.$toast(that, 'error', '网络错误～');\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    handleEdit: function handleEdit(index, row) {\n      this.editForm.id = row.id;\n      this.editForm.index = index;\n      this.editForm.img = row.poster;\n      this.editForm.imageUrl = row.img;\n      this.editForm.star = row.star;\n      this.editForm.score = row.score.toString();\n      this.editForm.describe = row.describe;\n      this.editForm.name = row.name;\n      this.editForm.series = row.series;\n      this.editForm.domains = row.domains;\n      this.dialogEdit = true;\n      console.log(index, row);\n    },\n    onEditSubmit: function onEditSubmit(editForm) {\n      var that = this;\n      that.$refs[editForm].validate(function (valid) {\n        if (valid) {\n          that.$axios.post('/api/movie/edit', that.$qs.stringify(that.editForm), {}).then(function (res) {\n            console.log(res, '/api/movie/edit');\n\n            if (res.data.status) {\n              that.dialogEdit = false;\n              that.movieData[that.editForm.index].img = res.data.data[0].img;\n              that.movieData[that.editForm.index].imageUrl = res.data.data[0].poster;\n              that.movieData[that.editForm.index].star = res.data.data[0].star;\n              that.movieData[that.editForm.index].score = res.data.data[0].score;\n              that.movieData[that.editForm.index].describe = res.data.data[0].describe;\n              that.movieData[that.editForm.index].name = res.data.data[0].name;\n              that.movieData[that.editForm.index].series = res.data.data[0].series;\n              that.movieData[that.editForm.index].domains = res.data.data[0].domains;\n              that.$toast(that, 'success', res.data.message);\n              console.log(that.movieData, 'movieData');\n            } else {\n              that.$toast(that, 'error', res.data.message);\n            }\n          }).catch(function (err) {\n            that.$toast(that, 'error', '网络错误～');\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    handleDelete: function handleDelete(index, row) {\n      console.log(index, row);\n      this.delForm.index = index;\n      this.delForm.id = row.id;\n      this.dialogDel = true;\n    },\n    onDelSubmit: function onDelSubmit() {\n      var that = this;\n      var data = {\n        'id': that.delForm.id\n      };\n      that.$axios.post('/api/movie/del', that.$qs.stringify(data), {}).then(function (res) {\n        console.log(res, '/api/movie/del');\n\n        if (res.data.status) {\n          that.movieData.splice(that.delForm.index, 1);\n          that.dialogDel = false;\n          that.$toast(that, 'success', res.data.message);\n        } else {\n          that.$toast(that, 'error', res.data.message);\n        }\n      }).catch(function (err) {\n        that.$toast(that, 'error', '网络错误～');\n      });\n    }\n  }\n};",{"version":3,"sources":["/Users/const/Documents/Movie/Slog/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/const/Documents/Movie/Slog/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/const/Documents/Movie/Slog/src/components/Movie.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport default {\n    name: 'Movie',\n    data() {\n        return {\n            search: '',\n            select: 'aaa',\n            tableHeight: '',\n            movieData: [],\n            items: [\n                { type: 'primary', label: '院线' },\n                { type: 'success', label: '自制' },\n                { type: 'info', label: '动作' },\n                { type: 'warning', label: '喜剧' },\n                { type: 'danger', label: '科幻' },\n                { type: 'primary', label: '犯罪' },\n                { type: 'success', label: '爱情' }\n            ],\n            dialogAdd: false,\n            addForm: {\n                img: '',\n                imageUrl: '',\n                star: '',\n                score: '',\n                describe: '',\n                name: '',\n                series: [],\n                domains: [{value: ''}],\n            },\n            addRules: {\n                star: [\n                    { required: true, message: '请输入用户名', trigger: 'blur' },\n                    { min: 2, max: 200, message: '长度在 2 到 200 个字符', trigger: 'blur' }\n                ],\n                score: [\n                    { required: true, message: '请输入电影评分', trigger: 'blur' },\n                    { min: 2, max: 10, message: '长度在 2 到 10 个字符', trigger: 'blur' }\n                ],\n                describe: [\n                    { required: true, message: '请输入电影简介', trigger: 'blur' },\n                    { min: 1, max: 500, message: '长度在 1 到 500 个字符', trigger: 'blur' }\n                ],\n                name: [\n                    { required: true, message: '请输入电影名称', trigger: 'blur' },\n                    { min: 1, max: 100, message: '长度在 1 到 100 个字符', trigger: 'blur' }\n                ],\n                series: [\n                    { type: 'array', required: true, message: '请至少选择一个类别', trigger: 'change' }\n                ]\n            },\n            dialogEdit: false,\n            editForm: {\n                id: Number,\n                index: Number,\n                img: '',\n                imageUrl: '',\n                star: '',\n                score: '',\n                describe: '',\n                name: '',\n                series: [],\n                domains: [{value: ''}],\n            },\n            editRules: {\n                star: [\n                    { required: true, message: '请输入用户名', trigger: 'blur' },\n                    { min: 2, max: 200, message: '长度在 2 到 200 个字符', trigger: 'blur' }\n                ],\n                score: [\n                    { required: true, message: '请输入电影评分', trigger: 'blur' },\n                    { min: 2, max: 10, message: '长度在 2 到 10 个字符', trigger: 'blur' }\n                ],\n                describe: [\n                    { required: true, message: '请输入电影简介', trigger: 'blur' },\n                    { min: 1, max: 500, message: '长度在 1 到 500 个字符', trigger: 'blur' }\n                ],\n                name: [\n                    { required: true, message: '请输入电影名称', trigger: 'blur' },\n                    { min: 1, max: 100, message: '长度在 1 到 100 个字符', trigger: 'blur' }\n                ],\n                series: [\n                    { type: 'array', required: true, message: '请至少选择一个类别', trigger: 'change' }\n                ]\n            },\n            dialogDel: false,\n            delForm: {\n                index: Number,\n                id: ''\n            }\n        }\n    },\n    created() {\n        let that = this;\n        that.$axios.post('/api/movie/list', {}, {})\n        .then(function(res) {\n            console.log(res, '/api/movie/list');\n            if (res.data.length > 0) {\n                that.movieData = res.data;\n            } else {\n                that.dialogAdd = true;\n            }\n        })\n        .catch(function(err) {\n            that.$toast(that, 'error', '网络错误～');\n            that.loading = false;\n        })\n    },\n    mounted() {\n        let that = this;\n        that.tableHeight = that.$refs.movie.offsetHeight - that.$refs.search.offsetHeight - 80;\n    },\n    methods: {\n        onSearch() {\n            let that = this;\n            if (that.search) {\n                let data = {\n                    search: that.search\n                }\n                that.$axios.post('/api/movie/search', that.$qs.stringify(data), {})\n                .then(function(res) {\n                    console.log(res, '/api/movie/search');\n                    if (res.data.status) {\n                        that.movieData = res.data.data;\n                        that.$toast(that, 'success', res.data.message);\n                    } else {\n                        that.$toast(that, 'error', res.data.message);\n                    }\n                })\n                .catch(function(err) {\n                    that.$toast(that, 'error', '网络错误～');\n                    that.loading = false;\n                })\n            } else {\n                that.$toast(that, 'error', '请输入内容～');\n            }\n        },\n        onTag: function(index) {\n            let that = this;\n            let data = {\n                tag: that.items[index].label\n            }\n            that.$axios.post('/api/movie/tag', that.$qs.stringify(data), {})\n            .then(function(res) {\n                console.log(res, '/api/movie/tag');\n                if (res.data.status) {\n                    that.movieData = res.data.data;\n                    that.$toast(that, 'success', res.data.message);\n                } else {\n                    that.$toast(that, 'error', res.data.message);\n                }\n            })\n            .catch(function(err) {\n                that.$toast(that, 'error', '网络错误～');\n            })\n        },\n        onFilter(data, type) {\n            switch(type)\n            {\n                case 1:\n                    let _star = data.split(';');\n                    let str = '';\n                    for(let i = 0; i<_star.length; i++) {\n                        str += '[' + _star[i] + ']';\n                    }\n                    return str;\n                    break;\n                case 2:\n                    console.log(data, '2222');\n                    let list = '';\n                    for (let i=0; i<data.length; i++) {\n                        list += '[' + data[i] + ']';\n                    }\n                    return list;\n                    break;\n            }\n\n\n        },\n        addDomain(status) {\n            status ? this.addForm.domains.push({value: '',key: Date.now()}) : this.editForm.domains.push({value: '',key: Date.now()});\n        },\n        removeDomain(item, status) {\n            if (status) {\n                var index = this.addForm.domains.indexOf(item)\n                if (index !== -1) {\n                    this.addForm.domains.splice(index, 1)\n                }\n            } else {\n                var index = this.editForm.domains.indexOf(item)\n                if (index !== -1) {\n                    this.editForm.domains.splice(index, 1)\n                }\n            }\n        },\n        beforeAvatarUpload(file) {\n            let that = this;\n            const isJPG = file.type === 'image/jpeg' || file.type === 'image/png';\n            const isLt2M = file.size / 1024 / 1024 < 2;\n\n            if (!isJPG) {\n                that.$toast(that, 'error', '上传头像图片只能是 JPG PNG 格式!');\n                return;\n            }\n            if (!isLt2M) {\n                that.$toast(that, 'error', '上传头像图片大小不能超过 2MB!');\n                return;\n            }\n            return isJPG && isLt2M;\n        },\n        handleAvatarSuccess(res, file) {\n            console.log(res, file, 'handleAvatarSuccess');\n            if (this.dialogAdd) {\n                this.addForm.img = res;\n                this.addForm.imageUrl = URL.createObjectURL(file.raw);\n            } else if (this.dialogEdit) {\n                this.editForm.img = res;\n                this.editForm.imageUrl = URL.createObjectURL(file.raw);\n            }\n        },\n        handleAdd(index, row) {\n            this.dialogAdd = true;\n        },\n        onAddSubmit(addForm) {\n            let that = this;\n            that.$refs[addForm].validate((valid)=>{\n                if (valid) {\n                    that.$axios.post('/api/movie/add', that.$qs.stringify(that.addForm), {})\n                    .then(function(res){\n                        console.log(res, '/api/movie/add');\n                        if (res.data.status) {\n                            that.dialogAdd = false;\n                            that.movieData.push(res.data.data[0]);\n                            that.$toast(that, 'success', res.data.message);\n                            console.log(that.movieData, 'movieData');\n                        } else {\n                            that.$toast(that, 'error', res.data.message);\n                        }\n                    })\n                    .catch(function(err) {\n                        that.$toast(that, 'error', '网络错误～');\n                    })\n                } else {\n                    return false;\n                }\n            })\n        },\n        handleEdit(index, row) {\n            this.editForm.id = row.id;\n            this.editForm.index = index;\n            this.editForm.img = row.poster;\n            this.editForm.imageUrl = row.img;\n            this.editForm.star = row.star;\n            this.editForm.score = row.score.toString();\n            this.editForm.describe = row.describe;\n            this.editForm.name = row.name;\n            this.editForm.series = row.series;\n            this.editForm.domains = row.domains;\n            this.dialogEdit = true;\n            console.log(index, row);\n        },\n        onEditSubmit(editForm) {\n            let that = this;\n            that.$refs[editForm].validate((valid)=>{\n                if (valid) {\n                    that.$axios.post('/api/movie/edit', that.$qs.stringify(that.editForm), {})\n                    .then(function(res){\n                        console.log(res, '/api/movie/edit');\n                        if (res.data.status) {\n                            that.dialogEdit = false;\n                            that.movieData[that.editForm.index].img = res.data.data[0].img;\n                            that.movieData[that.editForm.index].imageUrl = res.data.data[0].poster;\n                            that.movieData[that.editForm.index].star = res.data.data[0].star;\n                            that.movieData[that.editForm.index].score = res.data.data[0].score;\n                            that.movieData[that.editForm.index].describe = res.data.data[0].describe;\n                            that.movieData[that.editForm.index].name = res.data.data[0].name;\n                            that.movieData[that.editForm.index].series = res.data.data[0].series;\n                            that.movieData[that.editForm.index].domains = res.data.data[0].domains;\n                            that.$toast(that, 'success', res.data.message);\n                            console.log(that.movieData, 'movieData');\n                        } else {\n                            that.$toast(that, 'error', res.data.message);\n                        }\n                    })\n                    .catch(function(err) {\n                        that.$toast(that, 'error', '网络错误～');\n                    })\n                } else {\n                    return false;\n                }\n            })\n        },\n        handleDelete(index, row) {\n            console.log(index, row); \n            this.delForm.index = index;\n            this.delForm.id = row.id;\n            this.dialogDel = true;\n        },\n        onDelSubmit() {\n            let that = this;\n            let data = {\n                'id': that.delForm.id\n            }\n            that.$axios.post('/api/movie/del', that.$qs.stringify(data), {})\n            .then(function(res){\n                console.log(res, '/api/movie/del');\n                if (res.data.status) {\n                    that.movieData.splice(that.delForm.index, 1);\n                    that.dialogDel = false;\n                    that.$toast(that, 'success', res.data.message);\n                } else {\n                    that.$toast(that, 'error', res.data.message);\n                }\n            })\n            .catch(function(err) {\n                that.$toast(that, 'error', '网络错误～');\n            })\n        }\n    }\n}\n"],"sourceRoot":""}]}